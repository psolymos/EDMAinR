[{"path":"/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, interest fostering open welcoming community, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion, nationality. Examples unacceptable behavior participants include: use sexualized language imagery Personal attacks Trolling insulting/derogatory comments Public private harassment Publishing ’s private information, physical electronic addresses, without explicit permission unethical unprofessional conduct Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, ban temporarily permanently contributor behaviors deem inappropriate, threatening, offensive, harmful. adopting Code Conduct, project maintainers commit fairly consistently applying principles every aspect managing project. Project maintainers follow enforce Code Conduct may permanently removed project team. Code Conduct applies within project spaces public spaces individual representing project community. Instances abusive, harassing, otherwise unacceptable behavior may reported contacting project maintainer solymos@ualberta.ca. complaints reviewed investigated result response deemed necessary appropriate circumstances. Maintainers obligated maintain confidentiality regard reporter incident. Code Conduct adapted Contributor Covenant, version 1.3.0, available http://contributor-covenant.org/version/1/3/0/","code":""},{"path":"/articles/edma01-data.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"EDMA data","text":"EDMAinR R package Euclidean Distance Matrix Analysis (EDMA). EDMA coordinate‐free approach comparing biological shapes using landmark data. can install package GitHub help remotes R package: can now load EDMAinR package:","code":"if (!require(EDMAinR)) {   if (!require(remotes))       install.packages(\"remotes\")   remotes::install_github(\"psolymos/EDMAinR\") } library(EDMAinR) #> EDMAinR 0.3-0     2023-08-21"},{"path":[]},{"path":"/articles/edma01-data.html","id":"reading-data-from-xyz-files","dir":"Articles","previous_headings":"Landmark data","what":"Reading data from xyz files","title":"EDMA data","text":"Use read_xyz function read 2D 3D landmark data *.xyz files. First specify paths xyz file: Note: use system.file() function access example files package. defining files, either set working directory using setwd() use path like file <- \"c:/Users/<user>/<etc>\". xyz landmark data following structure: Header: description data. XYZ: indicates dimensions, XYZ means 3D landmark data. 42L 3 9: dimensions, e.g. 42 landmarks (\\(K\\)), 3 dimensions (\\(D\\)), 9 specimens (\\(n\\)). Landmark names, separated space. stacked data landmark coordinates, e.g. 3 columns, space separated numeric values \\(K \\times n\\) rows, \\(K\\) landmarks per individuals stacked \\(n\\) times. Blank line. Date scans specimen (\\(n\\) rows), part also used get specimen IDs. Now can read text files: Note: find information reading morphometrics file formats. stored data file object called x. typing name x (typing print(x)) get see inside:","code":"file <- system.file(\"extdata/crouzon/Crouzon_P0_Global_MUT.xyz\",      package=\"EDMAinR\") x <- read_xyz(file) x #> EDMA data: Crouzon P0 MUT #> 47 landmarks, 3 dimensions, 28 specimens"},{"path":"/articles/edma01-data.html","id":"the-edma-data-format","dir":"Articles","previous_headings":"Landmark data","what":"The EDMA data format","title":"EDMA data","text":"printout x told us important facts data: header information dimensions. EDMA data object (class ‘edma_data’) list two elements: $name data set name (header information .xyz file), $data list \\(n\\) matrices (list can named specimen information present), matrix dimension \\(K \\times D\\), dimension names matrices describing landmark names (rows) coordinate names (columns).","code":""},{"path":"/articles/edma01-data.html","id":"edma-data-dimensions-and-names","dir":"Articles","previous_headings":"Landmark data","what":"EDMA data dimensions and names","title":"EDMA data","text":"following methods used retrieve useful information EDMA data objects. Use dim access dimensions (landmarks, \\(K\\); dimensions, \\(D\\); replicates, \\(n\\)). landmarks, dimensions, specimens return landmark, dimension, specimen names, respectively, dimnames returns three list: dimension names missing input data file, use L denote landmarks S denote specimens. prepended numeric landmark specimen IDs follows original ordering data. coordinate dimensions \"X\", \"Y\", optionally \"Z\" 3D landmark data. also possible manipulate dimension names. useful different files landmarks slight differences (lower/upper case differences, etc.): can use edma_scale() function EDMA data objects implements various landmark scaling procedures.","code":"dim(x) # dimensions #> [1] 47  3 28 dimnames(x) # dimension names #> [[1]] #>  [1] \"amsph\" \"bas\"   \"cpsh\"  \"ethma\" \"ethmp\" \"laalf\" \"lasph\" \"lflac\" \"lnsla\" #> [10] \"lnslp\" \"locc\"  \"loci\"  \"lpalf\" \"lpfl\"  \"lpmx\"  \"lpns\"  \"lpsh\"  \"lpsq\"  #> [19] \"lpto\"  \"lptyp\" \"lsqu\"  \"lsyn\"  \"lzya\"  \"lzygo\" \"lzyt\"  \"opi\"   \"raalf\" #> [28] \"rasph\" \"rflac\" \"rmaxi\" \"rnsla\" \"rnslp\" \"rocc\"  \"roci\"  \"rpalf\" \"rpfl\"  #> [37] \"rpmx\"  \"rpns\"  \"rpsh\"  \"rpsq\"  \"rpto\"  \"rptyp\" \"rsqu\"  \"rsyn\"  \"rzya\"  #> [46] \"rzygo\" \"rzyt\"  #>  #> [[2]] #> [1] \"X\" \"Y\" \"Z\" #>  #> [[3]] #>  [1] \"CZCD1_1\"  \"CZCD1_2\"  \"CZCD1_7\"  \"CZCD1_10\" \"CZCD1_11\" \"CZCD1_15\" #>  [7] \"CZCD1_16\" \"CZCD1_18\" \"CZCD1_20\" \"CZCD1_21\" \"CZCD1_23\" \"CZCD1_24\" #> [13] \"CZCD1_25\" \"CZCD1_28\" \"CZCD1_30\" \"CZCD1_32\" \"CZCD1_36\" \"CZCD1_37\" #> [19] \"CZCD1_39\" \"CZCD1_40\" \"CZCD1_42\" \"CZCD1_53\" \"CZCD1_56\" \"CZCD1_59\" #> [25] \"CZCD1_65\" \"CZCD1_66\" \"CZCD1_72\" \"CZCD1_73\" landmarks(x) # landmark names #>  [1] \"amsph\" \"bas\"   \"cpsh\"  \"ethma\" \"ethmp\" \"laalf\" \"lasph\" \"lflac\" \"lnsla\" #> [10] \"lnslp\" \"locc\"  \"loci\"  \"lpalf\" \"lpfl\"  \"lpmx\"  \"lpns\"  \"lpsh\"  \"lpsq\"  #> [19] \"lpto\"  \"lptyp\" \"lsqu\"  \"lsyn\"  \"lzya\"  \"lzygo\" \"lzyt\"  \"opi\"   \"raalf\" #> [28] \"rasph\" \"rflac\" \"rmaxi\" \"rnsla\" \"rnslp\" \"rocc\"  \"roci\"  \"rpalf\" \"rpfl\"  #> [37] \"rpmx\"  \"rpns\"  \"rpsh\"  \"rpsq\"  \"rpto\"  \"rptyp\" \"rsqu\"  \"rsyn\"  \"rzya\"  #> [46] \"rzygo\" \"rzyt\" dimensions(x) # the names of the coordinate dimensions #> [1] \"X\" \"Y\" \"Z\" specimens(x) # specimen IDs #>  [1] \"CZCD1_1\"  \"CZCD1_2\"  \"CZCD1_7\"  \"CZCD1_10\" \"CZCD1_11\" \"CZCD1_15\" #>  [7] \"CZCD1_16\" \"CZCD1_18\" \"CZCD1_20\" \"CZCD1_21\" \"CZCD1_23\" \"CZCD1_24\" #> [13] \"CZCD1_25\" \"CZCD1_28\" \"CZCD1_30\" \"CZCD1_32\" \"CZCD1_36\" \"CZCD1_37\" #> [19] \"CZCD1_39\" \"CZCD1_40\" \"CZCD1_42\" \"CZCD1_53\" \"CZCD1_56\" \"CZCD1_59\" #> [25] \"CZCD1_65\" \"CZCD1_66\" \"CZCD1_72\" \"CZCD1_73\" lm <- landmarks(x) # copy original names landmarks(x) <- toupper(lm) landmarks(x) # new landmark names #>  [1] \"AMSPH\" \"BAS\"   \"CPSH\"  \"ETHMA\" \"ETHMP\" \"LAALF\" \"LASPH\" \"LFLAC\" \"LNSLA\" #> [10] \"LNSLP\" \"LOCC\"  \"LOCI\"  \"LPALF\" \"LPFL\"  \"LPMX\"  \"LPNS\"  \"LPSH\"  \"LPSQ\"  #> [19] \"LPTO\"  \"LPTYP\" \"LSQU\"  \"LSYN\"  \"LZYA\"  \"LZYGO\" \"LZYT\"  \"OPI\"   \"RAALF\" #> [28] \"RASPH\" \"RFLAC\" \"RMAXI\" \"RNSLA\" \"RNSLP\" \"ROCC\"  \"ROCI\"  \"RPALF\" \"RPFL\"  #> [37] \"RPMX\"  \"RPNS\"  \"RPSH\"  \"RPSQ\"  \"RPTO\"  \"RPTYP\" \"RSQU\"  \"RSYN\"  \"RZYA\"  #> [46] \"RZYGO\" \"RZYT\" landmarks(x) <- lm # reset names to original"},{"path":"/articles/edma01-data.html","id":"selecting-subsets-of-edma-data-objects","dir":"Articles","previous_headings":"Landmark data","what":"Selecting subsets of EDMA data objects","title":"EDMA data","text":"Subsetting data comes handy sometimes, .e. might want select landmarks get simplified picture relationships, different input files list different landmarks want select ones present data set. need filter specimens, want select specimens certain ages, gender, etc. Often need draw random sample specimens (randomization bootstrap). general way subset data sets via [ function (.e. x[, j, k]), 3 indices inside brackets refer landmarks (), dimensions (j), specimens (k). Imagine data 3D data cube square brackets allow us slice cube 3 different directions. colon notation next part mean parts taken using :way defining sequence integers: Read use square brackets extract parts data object: ?Extract (see section ‘Matrices arrays’). important thing keep mind empty/missing index (e.g. x[,,]) means ‘select everything’. can take subsets using: numeric indices (like saw ), logical indices, character names. Logical indices might handy , e.g., ancillary data specimens. age specimens (values ages matching order specimens EDMA data object), can use x[,,age < 1]. Character based subsets useful want select homologous landmarks multiple objects, want make sure landmarks’ order identical among multiple objects. [ function can used take subset also reorder landmarks specimens. Character indices suitable purpose, e.g.:","code":"x[1:10, , ]  # select the 1st 10 landmarks #> EDMA data: Crouzon P0 MUT #> 10 landmarks, 3 dimensions, 28 specimens x[ , 1:2, ]  # select 2 of the 2 dimensions #> EDMA data: Crouzon P0 MUT #> 47 landmarks, 2 dimensions, 28 specimens x[ , , 11:20] # select individuals from 11 to 20 #> EDMA data: Crouzon P0 MUT #> 47 landmarks, 3 dimensions, 10 specimens x[1:10, , 1:20] # combine multiple indices #> EDMA data: Crouzon P0 MUT #> 10 landmarks, 3 dimensions, 20 specimens x[c(\"amsph\", \"bas\", \"cpsh\"), , ]"},{"path":"/articles/edma01-data.html","id":"coercing-edma-data-into-other-object-types","dir":"Articles","previous_headings":"Landmark data","what":"Coercing EDMA data into other object types","title":"EDMA data","text":"data ($data) format inside object x list \\(K \\times D\\) matrices, one individual. Sometimes handy stack matrices create rectangular data (either matrix, data frame, \\(n \\times K\\) rows \\(D\\) columns): Note: using str show structure objects, necessary exploring data. str tells us dimensions (1316 rows 3 columns, first values, dimension names). Alternatively, can store data array (\\(K \\times D \\times n\\)):","code":"str(as.matrix(x)) #>  num [1:1316, 1:3] 5.85 2.79 6.86 9.11 8.25 ... #>  - attr(*, \"dimnames\")=List of 2 #>   ..$ : chr [1:1316] \"CZCD1_1_amsph\" \"CZCD1_1_bas\" \"CZCD1_1_cpsh\" \"CZCD1_1_ethma\" ... #>   ..$ : chr [1:3] \"X\" \"Y\" \"Z\" str(as.array(x)) #>  num [1:47, 1:3, 1:28] 5.85 2.79 6.86 9.11 8.25 ... #>  - attr(*, \"dimnames\")=List of 3 #>   ..$ : chr [1:47] \"amsph\" \"bas\" \"cpsh\" \"ethma\" ... #>   ..$ : chr [1:3] \"X\" \"Y\" \"Z\" #>   ..$ : chr [1:28] \"CZCD1_1\" \"CZCD1_2\" \"CZCD1_7\" \"CZCD1_10\" ..."},{"path":"/articles/edma01-data.html","id":"turning-3d-arrays-into-edma-data-objects","dir":"Articles","previous_headings":"Landmark data","what":"Turning 3D arrays into EDMA data objects","title":"EDMA data","text":".edma_data function turns 3D array EDMA data object. useful handling 3D array objects returned many functions geomorph package (.e. reading Morphologika, NTS, TPS files). header information gets lost way, can set quite easily: Note: geomorph package needs installed separately using install.packages(\"geomorph\").","code":"xnew <- as.edma_data(as.array(x)) xnew #> EDMA data: Landmark data #> 47 landmarks, 3 dimensions, 28 specimens xnew$name <- \"This is the same data as before\" xnew #> EDMA data: This is the same data as before #> 47 landmarks, 3 dimensions, 28 specimens"},{"path":"/articles/edma01-data.html","id":"visual-inspection-of-the-data","dir":"Articles","previous_headings":"","what":"Visual inspection of the data","title":"EDMA data","text":"plot_2d function shows convex hulls confidence ellipses landmarks based specimens. plot showing first two axes multidimensional scaling based form matrices (\\(FM\\); pairwise Euclidean distances):  images default show convex hull landmark enclosing specimens. also possible use 95% confidence ellipses:","code":"plot_2d(x) plot_2d(x, hull=FALSE)"},{"path":"/articles/edma01-data.html","id":"spotting-data-errors","dir":"Articles","previous_headings":"Visual inspection of the data","what":"Spotting data errors","title":"EDMA data","text":"Data sets can checked using plot function. default, function steps specimens check surprises. blue areas show convex hull landmark leaving single specimen , red dots show actual specimen. sign problem dot specimen located far outside convex hull. Using argument can specify specimen want display (possible select multiple specimen, use [ method take subset data plot plot_2d):  insert error show plot function can help identify problems. change coordinates 1st landmark 1st specimen. error showing outlier (long red line):","code":"plot(x, which=1) ## original values for specimen 1 plot(x, which=1) ## we change the 1st landmark xwrong <- x xwrong$data[[1]][1,1:2] <- c(2, 2) plot(xwrong, which=1)"},{"path":"/articles/edma01-data.html","id":"ordination-and-clustering","dir":"Articles","previous_headings":"Visual inspection of the data","what":"Ordination and clustering","title":"EDMA data","text":"ordination plot shows specimens based multidimensional scaling using pairwise distances specimens. distances based T-statistic can calculated .dist(x). calculation involves following steps: calculate Euclidean distances (\\(ED_{}\\)) pairs landmarks specimen \\(\\) (\\(= 1, \\dots, n\\)) based coordinates, calculate Euclidean distances (\\(ED_{j}\\)) pairs landmarks specimen \\(j\\) (\\(j = 1, \\dots, n\\)) based coordinates, calculate ratio \\(ED_{} / ED_{j}\\), calculate T-statistic log scale (max/min ratio 1, 0 distance, becomes log(1)=0): \\(d_{ij}=log(max[ED_{} / ED_{j}] / min[ED_{} / ED_{j}])\\). multidimensional scaling uses square root transformed log-T distances. error shows nicely ordination plot (colored red):  cluster dendrogram based log-T distance matrix described . default agglomeration algorithm set Ward’s minimum variance method (\"ward.D2\") using square root log-T distances .  agglomeration methods can set passing different method argument, e.g. single linkage (see ?hclust list options):  ordination clustering functions return ordination/cluster results, plots can customized. example create plot  ggplot2 popular alternative R’s base graphics. create plots :  See ?ape::plot.phylo customize dendrograms:   ggdendro package can plot tree-like data structures ggplot2. example:","code":"plot_ord(x, col=c(2, rep(1, dim(x)[3]))) plot_ord(xwrong, col=c(\"red\", rep(\"black\", dim(xwrong)[3]))) plot_clust(x) plot_clust(xwrong) plot_clust(x, method = \"single\") plot_clust(xwrong, method = \"single\") mds <- plot_ord(x, plot=FALSE) str(mds) #> List of 5 #>  $ points: num [1:28, 1:2] -0.181 -0.757 -0.287 -0.116 -0.564 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:28] \"CZCD1_1\" \"CZCD1_2\" \"CZCD1_7\" \"CZCD1_10\" ... #>   .. ..$ : chr [1:2] \"Axis 1\" \"Axis 2\" #>  $ eig   : NULL #>  $ x     : NULL #>  $ ac    : num 0.143 #>  $ GOF   : num [1:2] 0.253 0.253 plot(mds$points, pch=4, col=\"darkgreen\",   main=\"Ordination diagram\") abline(h=0, v=0, lty=2, col=\"grey\") text(mds$points, labels=specimens(x), pos=1, cex=0.6, col=\"tan\") library(ggplot2) df <- as.data.frame(mds$points) p <- ggplot(data=df, aes(x=`Axis 1`, y=`Axis 2`, label=rownames(df))) +   geom_label() +   geom_vline(xintercept=0, lty=2) +   geom_hline(yintercept=0, lty=2) p h <- plot_clust(x, plot=FALSE) h #>  #> Call: #> hclust(d = d, method = method) #>  #> Cluster method   : ward.D2  #> Number of objects: 28 plot(h) plot(ape::as.phylo(h), type=\"cladogram\", font=1, cex=0.6) library(ggdendro) ggdendrogram(h, rotate = TRUE, size = 2)"},{"path":"/articles/edma01-data.html","id":"writing-data-to-xyz-format","dir":"Articles","previous_headings":"Visual inspection of the data","what":"Writing data to xyz format","title":"EDMA data","text":"Different kinds morphometrics data formats can turned EDMA data format long can organized \\(K \\times D \\times n\\) array using .edma_data method. data EDMA data object, write_xyz function write text file extension xyz: Note: tuse real file name path, temp file used demonstration purposes . Read see xyz data used fit EDMA models .","code":"f <- tempfile(fileext = \".xyz\") # create a temporary file write_xyz(x, file=f)            # write data to temp file tmp <- read_xyz(file=f)         # read back the data x                               # original data #> EDMA data: Crouzon P0 MUT #> 47 landmarks, 3 dimensions, 28 specimens tmp                             # this should be the same too #> EDMA data: Crouzon P0 MUT #> 47 landmarks, 3 dimensions, 28 specimens ## test if the all the dimnames are the same stopifnot(identical(dimnames(x), dimnames(tmp))) unlink(f)                       # delete temp file"},{"path":"/articles/edma02-form.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"EDMA form matrix","text":"tutorial explains use EDMAinR package fit nonparametric model landmark data estimate mean form. Let’s load package read example data set:","code":"library(EDMAinR) #> EDMAinR 0.3-0     2023-08-21 file <- system.file(\"extdata/crouzon/Crouzon_P0_Global_MUT.xyz\",      package=\"EDMAinR\") x <- read_xyz(file)"},{"path":"/articles/edma02-form.html","id":"nonparametric-fit","dir":"Articles","previous_headings":"","what":"Nonparametric fit","title":"EDMA form matrix","text":"use edma_fit function run nonparametric estimation. B argument number bootstrap replicates take (resampling \\(n\\) specimens object x replacement). chose small number , B ideally much higher (.e. B=99): nonparametric estimator gives mean form matrix (\\(\\hat{M}\\)) \\(\\hat{\\Sigma}_{K}^\\ast\\). can extract fitted model object (fit) using Meanform SigmaKstar functions: Note: using str function peek - otherwise huge - objects, just printing structure.","code":"fit <- edma_fit(x, B=9) fit #> EDMA nonparametric fit: Crouzon P0 MUT #> Call: edma_fit(x = x, B = 9) #> 47 landmarks, 3 dimensions, 28 specimens, 9 bootstrap runs str(Meanform(fit)) #>  num [1:47, 1:3] -0.734 -4.238 0.566 2.778 1.99 ... #>  - attr(*, \"dimnames\")=List of 2 #>   ..$ : chr [1:47] \"amsph\" \"bas\" \"cpsh\" \"ethma\" ... #>   ..$ : chr [1:3] \"X\" \"Y\" \"Z\" str(SigmaKstar(fit)) #>  num [1:47, 1:47] 0.000892 0.001559 -0.001256 -0.003276 -0.000797 ... #>  - attr(*, \"dimnames\")=List of 2 #>   ..$ : chr [1:47] \"amsph\" \"bas\" \"cpsh\" \"ethma\" ... #>   ..$ : chr [1:47] \"amsph\" \"bas\" \"cpsh\" \"ethma\" ..."},{"path":"/articles/edma02-form.html","id":"form-matrix","dir":"Articles","previous_headings":"","what":"Form matrix","title":"EDMA form matrix","text":"can extract stacked Euclidean distances (stacked form matrix \\(FM\\)) get_fm function. functions allows sort table based decreasing increasing order distance: columns row col refer landmark pairs. dist gives Euclidean distance mean form corrdinates two landmarks. lower upper indicates 95% confidence limits based bootstrap distribution pairwise distances (B replicates). confidence level can changed get_fm(fit, level=0.9).","code":"head(get_fm(fit)) #>     row   col     dist    lower    upper #> 1   bas amsph 3.577936 3.544238 3.593006 #> 2  cpsh amsph 1.540089 1.516862 1.547644 #> 3 ethma amsph 3.581924 3.532572 3.594558 #> 4 ethmp amsph 2.836499 2.809761 2.843809 #> 5 laalf amsph 4.422629 4.364985 4.438057 #> 6 lasph amsph 1.703182 1.692038 1.706379 head(get_fm(fit, sort=TRUE, decreasing=TRUE)) #>       row   col     dist    lower    upper #> 357   opi lnsla 10.51996 10.43197 10.57448 #> 855 rnsla   opi 10.51282 10.43827 10.56389 #> 364  rocc lnsla 10.50282 10.40954 10.56432 #> 435 rnsla  locc 10.50211 10.42761 10.54708 #> 342  locc lnsla 10.48118 10.39447 10.52831 #> 947  rocc rnsla 10.47022 10.39028 10.52702 head(get_fm(fit, sort=TRUE, decreasing=FALSE)) #>       row   col      dist     lower     upper #> 400 rnslp lnslp 0.1438078 0.1397477 0.1495684 #> 362 rnsla lnsla 0.2240747 0.2180288 0.2364729 #> 416  loci  locc 0.5006441 0.4911260 0.5183610 #> 977  roci  rocc 0.5033859 0.4838637 0.5265118 #> 127  rpsh  cpsh 0.5262757 0.5117248 0.5335223 #> 105  lpsh  cpsh 0.5750350 0.5637268 0.5836379"},{"path":"/articles/edma02-form.html","id":"visualizing-the-mean-form","dir":"Articles","previous_headings":"","what":"Visualizing the mean form","title":"EDMA form matrix","text":"2D plot gives projection mean form using multidimensional scaling (uses \\(FM\\) based \\(\\hat{M}\\)). dot size proportional SigmaKstar(fit) diagonal elements (scaling can chosen cex argument). plot_2d function returns plotting coordinates, can used add landmark names:  See ?rgl::plot3d options modify 3D plot.","code":"xy <- plot_2d(fit, cex=2) text(xy, labels=rownames(xy), pos=1) library(rgl) xyz <- plot_3d(fit) text3d(xyz, texts=rownames(xyz), pos=1) # this adds names decorate3d() # this adds the axes rglwidget(width = 600, height = 600, reuse = FALSE)"},{"path":"/articles/edma02-form.html","id":"changing-the-default-colors","dir":"Articles","previous_headings":"","what":"Changing the default colors","title":"EDMA form matrix","text":"possible supply color values plot_2d plot_3d functions allow full control:  easier way, however, provide color palette choices listed help page function ?hcl.colors. available diverging color palettes : EDMAinR default palettes stored ‘options’. default palettes produces colors:  change default palette: produces following palettes:   Note: using ‘high’ end palette dots scaled standard deviation like measure based sqrt(diag(SigmaKstar(fit))). can reset defaults using op list saved :","code":"col <- rainbow(nrow(xy)) plot_2d(fit, col=col, cex=2) plot_3d(fit, col=col) rglwidget(width = 600, height = 600, reuse = FALSE) hcl.pals(type = \"diverging\") #>  [1] \"Blue-Red\"      \"Blue-Red 2\"    \"Blue-Red 3\"    \"Red-Green\"     #>  [5] \"Purple-Green\"  \"Purple-Brown\"  \"Green-Brown\"   \"Blue-Yellow 2\" #>  [9] \"Blue-Yellow 3\" \"Green-Orange\"  \"Cyan-Magenta\"  \"Tropic\"        #> [13] \"Broc\"          \"Cork\"          \"Vik\"           \"Berlin\"        #> [17] \"Lisbon\"        \"Tofino\" getOption(\"edma_options\") #> $diverging #> [1] \"Blue-Red\" #>  #> $qualitative #> [1] \"Set 2\" plot_edma_colors(101) op <- options(\"edma_options\" = list(     diverging = \"Green-Orange\",     qualitative = \"Dark 2\")) op #> $edma_options #> $edma_options$diverging #> [1] \"Blue-Red\" #>  #> $edma_options$qualitative #> [1] \"Set 2\" plot_2d(fit, cex=2) plot_3d(fit) rglwidget(width = 600, height = 600, reuse = FALSE) options(op)"},{"path":"/articles/edma03-form-difference.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"EDMA form difference matrix","text":"tutorial explains calculate form difference based 2 EDMA data objects homologous landmarks. use 2 data sets: one without mutation responsible Crouzon syndrome:","code":"library(EDMAinR) #> EDMAinR 0.3-0     2023-08-21  file1 <- system.file(\"extdata/crouzon/Crouzon_P0_Global_MUT.xyz\",     package=\"EDMAinR\") x1 <- read_xyz(file1)  file2 <- system.file(\"extdata/crouzon/Crouzon_P0_Global_NON-MUT.xyz\",     package=\"EDMAinR\") x2 <- read_xyz(file2)"},{"path":"/articles/edma03-form-difference.html","id":"estimating-the-form-matrices","dir":"Articles","previous_headings":"","what":"Estimating the form matrices","title":"EDMA form difference matrix","text":"first estimate mean forms (bootstrap replicates necessary). Form matrices (\\(FM\\)) formed pairwise Euclidean distances landmarks EDMA fit objects using estimated mean forms objects \\(\\) \\(B\\).","code":"numerator <- edma_fit(x1, B=25) denominator <- edma_fit(x2, B=25)"},{"path":"/articles/edma03-form-difference.html","id":"form-difference","dir":"Articles","previous_headings":"","what":"Form difference","title":"EDMA form difference matrix","text":"Form difference (\\(FDM\\)) calculated ratio form matrices (\\(FM\\)) numerator denominator objects following Lele Richtsmeier (1992, 1995): \\(FDM(,B) = FM(B)/FM()\\). Bootstrap distribution based fixing reference \\(FM\\) taking ratio reference \\(FM\\) bootstrap \\(FM\\)s object. ref_denom argument can used control object reference (denominator default), B number replicates drawn distribution:","code":"fdm <- edma_fdm(numerator, denominator, B=25) fdm #> EDMA form difference matrix #> Call: edma_fdm(numerator = numerator, denominator = denominator, B = 25) #> 25 bootstrap runs (ref: denominator) #> Tobs = 1.5981, p < 2.22e-16"},{"path":"/articles/edma03-form-difference.html","id":"global-t-test","dir":"Articles","previous_headings":"Form difference","what":"Global T-test","title":"EDMA form difference matrix","text":"global T-test based pairwise distances \\(FM\\)s, taking max/min ratio distances. done B replicates, provides null distribution. Algorithm global testing follows (suppose population 1 ‘reference’ population): Resample \\(n_1\\) observations first sample compute \\(FM_1^*\\). Resample \\(n_2\\) observations first sample compute \\(FM_2^*\\). Compute \\(FDM^* = FM_2^* / FM_1^*\\) \\(T^* = max(FDM^*) / min(FDM^*)\\). Repeat three steps B times get p-value. global_test provides summary test, plot_test helps visualize null distribution (histogram) observed T statistic (vertical line):","code":"global_test(fdm) #>  #>  Bootstrap based EDMA Tobs-test #>  #> data:  form difference matrix #> Tobs -value = 1.5981, B = 25, p-value < 2.2e-16 plot_test(fdm)"},{"path":"/articles/edma03-form-difference.html","id":"local-testing","dir":"Articles","previous_headings":"Form difference","what":"Local testing","title":"EDMA form difference matrix","text":"local testing done based confidence intervals using stacked \\(FDM\\)s bootstrap. Output structure similar output get_fm function, interpretation confidence intervals different due different nature bootstrap distribution. distribution characterizes \\(FDM\\) \\(FM\\). confidence level can changed level argument. algorithm confidence intervals elements FDM follows: Resample \\(n_1\\) observations first sample compute \\(FM_1^*\\). Resample \\(n_2\\) observations second sample compute \\(FM_2^*\\). Compute \\(FDM* = FM_2^* / FM_1^*\\). Repeat three steps B times get confidence intervals elements \\(FDM\\). Differences confidence limits indicate distances significantly deviate bootstrap based null expectation, thus related landmarks drive differences. Inspecting highest lowest differences (using sort) can help revealing landmarks. lower upper limits confidence intervals based confint (row names indicate unsorted sequence landmark pairs output get_fdm(fdm)): plot_ci function shows pairwise differences confidence intervals. x-axis label shows landmark pairs, gets really busy. Use xshow=FALSE argument remove labels.  can use stacked \\(FDM\\) data frame make ggplot2 based plot:  ggplot2 version plot, can load plotly package make object interactive:","code":"head(get_fdm(fdm)) #>     row   col      dist     lower     upper #> 1   bas amsph 1.0425379 1.0291234 1.0572437 #> 2  cpsh amsph 0.9823765 0.9616780 0.9988809 #> 3 ethma amsph 1.0037761 0.9914403 1.0156289 #> 4 ethmp amsph 0.9401242 0.9278436 0.9510568 #> 5 laalf amsph 0.9878983 0.9788081 0.9990751 #> 6 lasph amsph 1.0161844 0.9891307 1.0317053 head(get_fdm(fdm, sort=TRUE, decreasing=TRUE)) #>       row   col     dist    lower    upper #> 136 ethmp ethma 1.377873 1.279108 1.479039 #> 697  rpto  lpto 1.131002 1.087753 1.164933 #> 179 laalf ethmp 1.095672 1.070444 1.124045 #> 200 raalf ethmp 1.094267 1.067043 1.125650 #> 881  rpmx raalf 1.080811 1.061278 1.103610 #> 607  rpns  lpns 1.078698 1.058532 1.122745 head(get_fdm(fdm, sort=TRUE, decreasing=FALSE)) #>        row   col      dist     lower     upper #> 527   lsqu  lpfl 0.8622059 0.8089977 0.9459507 #> 1022  rsqu  rpfl 0.8781312 0.8243285 0.9393457 #> 93   ethmp  cpsh 0.9034404 0.8810750 0.9250952 #> 212   rpsh ethmp 0.9177018 0.8965352 0.9395801 #> 190   lpsh ethmp 0.9181652 0.8947758 0.9348729 #> 4    ethmp amsph 0.9401242 0.9278436 0.9510568 head(confint(fdm)) #>                  2.5%     97.5% #> bas-amsph   1.0291234 1.0572437 #> cpsh-amsph  0.9616780 0.9988809 #> ethma-amsph 0.9914403 1.0156289 #> ethmp-amsph 0.9278436 0.9510568 #> laalf-amsph 0.9788081 0.9990751 #> lasph-amsph 0.9891307 1.0317053 plot_ci(fdm, xshow=FALSE) library(ggplot2) df <- get_fdm(fdm, sort=TRUE) df$x <- 1:nrow(df) # make x-axis continuous df$name <- paste(df$row, df$col) # add names p <- ggplot(data=df, aes(x=x, y=dist,      ymin=lower, ymax=upper, label=name)) +   geom_ribbon(col=\"#0000ff40\", fill=\"#0000ff40\") +   geom_line() +   geom_hline(yintercept=1, col=2) +   labs(y=\"FDM Ratio\", x=\"Landmark Pairs\") +   theme_linedraw() +   theme(axis.text.x=element_blank()) p library(plotly) ggplotly(p)"},{"path":"/articles/edma03-form-difference.html","id":"influential-landmarks","dir":"Articles","previous_headings":"","what":"Influential landmarks","title":"EDMA form difference matrix","text":"can consider landmark influential respect form difference removing landmark, global T value moves close 1. case indicate landmark question driving form differences (.e. pairwise distances landmark landmarks contribute maximum value T statistic). , however, remove non-influential landmark, expect T value change lot. Therefore, ‘drop’ T value removing landmark can used rank landmarks based influence. Influential landmarks identified leaving one landmark time, calculating T-statistic based remaining distances. can use bootstrap distribution see T value ‘drop’ makes global test non-significant. means removing landmark, form difference distinguished null expectation. influential landmark one largest drop T value compared original T statistic. Tdrop newly calculated T value leaving landmark question: Note: used order function create index order rows infl data frame. get_influence also takes level argument specifying desired confidence interval (default 95%). plot function shows landmarks ordered Tdrop influential landmarks left-hand side plot. horizontal line top indicates original T value (landmarks considered), increasing line shows Tdrop, shaded area null distribution T statistic:  ggplot2 version:  interactive version:","code":"infl <- get_influence(fdm) head(infl[order(infl$Tdrop),], 10) #>    landmark    Tdrop    lower    upper #> 4     ethma 1.311754 1.074204 1.253519 #> 5     ethmp 1.311754 1.074204 1.253519 #> 14     lpfl 1.569097 1.074204 1.350022 #> 21     lsqu 1.569097 1.074204 1.350022 #> 1     amsph 1.598078 1.074204 1.360890 #> 2       bas 1.598078 1.074204 1.360890 #> 3      cpsh 1.598078 1.074204 1.360890 #> 6     laalf 1.598078 1.074204 1.360890 #> 7     lasph 1.598078 1.074204 1.360890 #> 8     lflac 1.598078 1.074204 1.360890 plot(infl) df <- infl[order(infl$Tdrop),] df$landmark <- factor(as.character(df$landmark), as.character(df$landmark)) p <- ggplot(data=df, aes(x=landmark, y=Tdrop, ymin=lower, ymax=upper, group=1)) +   geom_ribbon(col=\"#0000ff40\", fill=\"#0000ff40\") +   geom_hline(yintercept=global_test(fdm)$statistic, col=2) +   geom_line() +   labs(y=\"T-value\", x=\"Landmarks\") +   theme(axis.text.x=element_text(angle = 45,         vjust = 1, hjust=1)) p ggplotly(p)"},{"path":"/articles/edma03-form-difference.html","id":"ordination-and-clustering-for-specimens","dir":"Articles","previous_headings":"","what":"Ordination and clustering for specimens","title":"EDMA form difference matrix","text":"ordination cluster dendrogram shows two sets specimens 2 objects diagram. 2 sets combined combine_data function: visualization otherwise use principles described EDMA data objects. difference specimens labels colored (using default qualitative palette) according groups (numerator vs. denominator). numerator denominator objects different (global T value high, \\(p\\) value low, influential landmarks), expect two groups separate ordination space along dendrogram:  dendrogram leaves (specimen labels) also colored groups:  colors can changed via color options:","code":"x1 #> EDMA data: Crouzon P0 MUT #> 47 landmarks, 3 dimensions, 28 specimens x2 #> EDMA data: Crouzon P0 UNAFF #> 47 landmarks, 3 dimensions, 31 specimens (x12 <- combine_data(x1, x2)) #> EDMA data: data with 2 groups #> 47 landmarks, 3 dimensions, 59 specimens table(x12$groups) #>  #>  1  2  #> 28 31 plot_ord(fdm) plot_clust(fdm) op <- options(\"edma_options\" = list(     diverging = \"Blue-Red\",     qualitative = \"Warm\")) plot_ord(fdm) options(op)"},{"path":"/articles/edma03-form-difference.html","id":"visualizing-landmarks","dir":"Articles","previous_headings":"","what":"Visualizing landmarks","title":"EDMA form difference matrix","text":"2D 3D plots produce plot mean form reference object (‘prototype’). color intensity landmarks (dots) associated Tdrop influence value (larger difference, intensive color; red default). Lines landmarks represent distances. use diverging palettes: <1 differences colored blue (1st half palette), >1 differences colored red (2st half palette).  2D 3D plots display pairwise distances. displaying edges desired, use =TRUE argument.","code":"plot_2d(fdm, cex=2) library(rgl) xyz <- plot_3d(fdm) text3d(xyz, texts=rownames(xyz), pos=1) # this adds names decorate3d() # this adds the axes rglwidget(width = 600, height = 600, reuse = FALSE)"},{"path":"/articles/edma04-growth.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"EDMA growth matrix","text":"tutorial explains calculate growth matrix based 4 EDMA data objects homologous landmarks. use data sets landmarks measured specimens 2 different ages (E17.5 embryonic newborn mice), taking subset (l) 10 landmarks:","code":"library(EDMAinR) #> EDMAinR 0.3-0     2023-08-21  file_a1 <- system.file(\"extdata/growth/CZEM_wt_global.xyz\",     package=\"EDMAinR\") file_a2 <- system.file(\"extdata/growth/CZP0_wt_global.xyz\",     package=\"EDMAinR\")  l <- c(\"amsph\", \"bas\", \"loci\", \"lpto\", \"lsqu\",         \"lsyn\", \"roci\", \"rpto\", \"rsqu\", \"rsyn\")  a1 <- read_xyz(file_a1)[l,,] a2 <- read_xyz(file_a2)[l,,] a1 #> EDMA data: Crouzon unaffected embryonic mouse #> 10 landmarks, 3 dimensions, 31 specimens a2 #> EDMA data: Crouzon unaffected newborn mouse #> 10 landmarks, 3 dimensions, 11 specimens"},{"path":"/articles/edma04-growth.html","id":"estimating-the-growth-matrices","dir":"Articles","previous_headings":"","what":"Estimating the growth matrices","title":"EDMA growth matrix","text":"first estimate mean forms (bootstrap replicates necessary). Growth matrices (\\(GM\\)) formed pairwise Euclidean distances landmarks EDMA fit objects using estimated mean forms objects a1 a2. growth matrix calculated ratio form matrices (\\(FM\\)) numerator denominator objects: \\(FDM(a1,a2) = FM(a2)/FM(a1)\\). a2 taken numerator, a1 denominator. put older sample (newborn) numerator spot younger sample (embryonic) denominator spot","code":"fit_a1 <- edma_fit(a1, B=25) fit_a2 <- edma_fit(a2, B=25) gm <- edma_gm(a1=fit_a1, a2=fit_a2, B=25) gm #> EDMA growth matrix #> Call: edma_gm(a1 = fit_a1, a2 = fit_a2, B = 25) #> 25 bootstrap runs (ref: denominator) #> Tobs = 1.259, p < 2.22e-16"},{"path":"/articles/edma04-growth.html","id":"global-t-test","dir":"Articles","previous_headings":"Estimating the growth matrices","what":"Global T-test","title":"EDMA growth matrix","text":"global testing explained form difference page:","code":"global_test(gm) #>  #>  Bootstrap based EDMA G-test #>  #> data:  growth matrix #> G -value = 1.259, B = 25, p-value < 2.2e-16 plot_test(gm)"},{"path":"/articles/edma04-growth.html","id":"local-testing","dir":"Articles","previous_headings":"Estimating the growth matrices","what":"Local testing","title":"EDMA growth matrix","text":"local testing explained form difference page: plot_ci function shows pairwise differences confidence intervals:","code":"head(confint(gm)) #>                2.5%    97.5% #> bas-amsph  1.097126 1.139303 #> loci-amsph 1.090709 1.140518 #> lpto-amsph 1.124263 1.157854 #> lsqu-amsph 1.125901 1.180991 #> lsyn-amsph 1.111795 1.183497 #> roci-amsph 1.088908 1.140621 head(get_gm(gm)) #>    row   col     dist    lower    upper #> 1  bas amsph 1.116726 1.097126 1.139303 #> 2 loci amsph 1.112833 1.090709 1.140518 #> 3 lpto amsph 1.144189 1.124263 1.157854 #> 4 lsqu amsph 1.149705 1.125901 1.180991 #> 5 lsyn amsph 1.139680 1.111795 1.183497 #> 6 roci amsph 1.110515 1.088908 1.140621 head(get_gm(gm, sort=TRUE, decreasing=TRUE)) #>     row  col     dist    lower    upper #> 45 rsyn rsqu 1.196344 1.170451 1.221840 #> 31 lsyn lsqu 1.194661 1.171932 1.222121 #> 41 rsqu roci 1.159037 1.138248 1.190256 #> 35 rsyn lsqu 1.155865 1.132506 1.183046 #> 19 lsqu loci 1.155629 1.133975 1.179900 #> 16 rsqu  bas 1.155440 1.135015 1.177115 head(get_gm(gm, sort=TRUE, decreasing=FALSE)) #>     row  col      dist     lower    upper #> 28 rpto lpto 0.9502249 0.9187017 1.017281 #> 34 rsqu lsqu 1.0364970 1.0186496 1.062037 #> 21 roci loci 1.0365211 1.0021116 1.055886 #> 27 roci lpto 1.0423805 1.0296007 1.062666 #> 22 rpto loci 1.0515532 1.0381430 1.070109 #> 29 rsqu lpto 1.0610708 1.0388944 1.082089 plot_ci(gm)"},{"path":"/articles/edma04-growth.html","id":"influential-landmarks","dir":"Articles","previous_headings":"","what":"Influential landmarks","title":"EDMA growth matrix","text":"Influence calculated similarly \\(FDM\\):","code":"get_influence(gm) #>    landmark    Tdrop    lower    upper #> 1     amsph 1.259012 1.012273 1.147487 #> 2       bas 1.259012 1.015448 1.147487 #> 3      loci 1.259012 1.015448 1.147487 #> 4      lpto 1.154219 1.012714 1.090116 #> 5      lsqu 1.259012 1.011701 1.147487 #> 6      lsyn 1.259012 1.015448 1.146744 #> 7      roci 1.259012 1.014498 1.147487 #> 8      rpto 1.154219 1.010438 1.079035 #> 9      rsqu 1.257240 1.013524 1.146822 #> 10     rsyn 1.257240 1.012347 1.146079 plot(get_influence(gm))"},{"path":"/articles/edma04-growth.html","id":"ordination-and-clustering-for-specimens","dir":"Articles","previous_headings":"","what":"Ordination and clustering for specimens","title":"EDMA growth matrix","text":"dendrogram leaves (specimen labels) also colored groups:","code":"plot_ord(gm) plot_clust(gm)"},{"path":"/articles/edma04-growth.html","id":"visualizing-landmarks","dir":"Articles","previous_headings":"","what":"Visualizing landmarks","title":"EDMA growth matrix","text":"2D 3D plots produce plot mean form reference object (‘prototype’). color intensity landmarks (dots) associated Tdrop influence value (larger difference, intensive color; red default). Lines landmarks represent distances. use diverging palettes: <1 differences colored blue (1st half palette), >1 differences colored red (2st half palette).","code":"plot_2d(gm, cex=2) library(rgl) xyz <- plot_3d(gm) text3d(xyz, texts=rownames(xyz), pos=1) # this adds names decorate3d() # this adds the axes rglwidget(width = 600, height = 600, reuse = FALSE)"},{"path":"/articles/edma04-growth.html","id":"growth-difference-matrix","dir":"Articles","previous_headings":"","what":"Growth difference matrix","title":"EDMA growth matrix","text":"Growth difference matrix (\\(GDM\\)) calculated \\(GDM(A1,A2,B1,B2) = GM(B1,B2) / GM(A1,A2)\\). use two Crouzon mutant samples, age groups unaffected samples (embryonic newborn): Growth matrices (\\(GM\\)) formed pairwise Euclidean distances landmarks EDMA fit objects using estimated mean forms objects a1 a2. growth matrix calculated ratio form matrices (\\(FM\\)) numerator denominator objects: \\(FDM(a1,a2) = FM(a2)/FM(a1)\\). a2 taken numerator, a1 denominator. put older sample (newborn) numerator spot younger sample (embryonic) denominator spot","code":"file_b1 <- system.file(\"extdata/growth/CZEM_mut_global.xyz\",     package=\"EDMAinR\") file_b2 <- system.file(\"extdata/growth/CZP0_mut_global.xyz\",     package=\"EDMAinR\")  b1 <- read_xyz(file_b1)[l,,] b2 <- read_xyz(file_b2)[l,,] b1 #> EDMA data: Crouzon mutant embryonic mouse #> 10 landmarks, 3 dimensions, 18 specimens b2 #> EDMA data: Crouzon mutant newborn mouse #> 10 landmarks, 3 dimensions, 11 specimens  fit_b1 <- edma_fit(b1, B=25) fit_b2 <- edma_fit(b2, B=25) gdm <- edma_gdm(a1=fit_a1, a2=fit_a2, b1=fit_b1, b2=fit_b2, B=25) gdm #> EDMA growth difference matrix #> Call: edma_gdm(a1 = fit_a1, a2 = fit_a2, b1 = fit_b1, b2 = fit_b2,  #>     B = 25) #> 25 bootstrap runs (ref: denominator) #> Tobs = 1.1113, p = 0.15385  global_test(gdm) #>  #>  Bootstrap based EDMA G-test #>  #> data:  growth difference matrix #> G -value = 1.1113, B = 26, p-value = 0.1538 plot_test(gdm) plot_ci(gdm) plot_ord(gdm) plot_clust(gdm) plot_2d(gdm) xyz <- plot_3d(gdm) text3d(xyz, texts=rownames(xyz), pos=1) # this adds names decorate3d() # this adds the axes rglwidget(width = 600, height = 600, reuse = FALSE)"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Peter Solymos. Author, maintainer. Subhash R. Lele. Author. Theodore M. Cole. Author. Liangyuan Hu. Author. Joan T. Richtsmeier. Author. Kevin M. Middleton. Contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Solymos P, Lele S, Cole T, Hu L, Richtsmeier J (2023). EDMAinR: Euclidean Distance Matrix Analysis R. R package version 0.3-0.","code":"@Manual{,   title = {EDMAinR: Euclidean Distance Matrix Analysis in R},   author = {Peter Solymos and Subhash R. Lele and Theodore M. Cole and Liangyuan Hu and Joan T. Richtsmeier},   year = {2023},   note = {R package version 0.3-0}, }"},{"path":"/index.html","id":"edmainr---euclidean-distance-matrix-analysis-in-r","dir":"","previous_headings":"","what":"Euclidean Distance Matrix Analysis in R","title":"Euclidean Distance Matrix Analysis in R","text":"coordinate‐free approach comparing biological shapes using landmark data","code":""},{"path":"/index.html","id":"install","dir":"","previous_headings":"","what":"Install","title":"Euclidean Distance Matrix Analysis in R","text":"See new NEWS file.","code":"if (!require(\"remotes\")) install.packages(\"remotes\") remotes::install_github(\"psolymos/EDMAinR\")"},{"path":"/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Euclidean Distance Matrix Analysis in R","text":"GPL-2","code":""},{"path":"/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Euclidean Distance Matrix Analysis in R","text":"Feedback contributions welcome: submit feature request report issues , fork project submit pull request, see CoC.","code":""},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Euclidean Distance Matrix Analysis in R","text":"","code":"library(EDMAinR) #> EDMAinR 0.1-3     2020-06-12  file1 <- system.file(\"extdata/crouzon/Crouzon_P0_Global_MUT.xyz\",     package=\"EDMAinR\") x1 <- read_xyz(file1) x1 #> EDMA data: Crouzon P0 MUT #> 3 dimensions, 47 landmarks, 28 specimens  file2 <- system.file(\"extdata/crouzon/Crouzon_P0_Global_NON-MUT.xyz\",     package=\"EDMAinR\") x2 <- read_xyz(file2) x2 #> EDMA data: Crouzon P0 UNAFF #> 3 dimensions, 47 landmarks, 31 specimens  B <- 9  fit <- edma_fit(x1, B=B) fit #> EDMA nonparametric fit: Crouzon P0 MUT #> Call: edma_fit(x = x1, B = B) #> 3 dimensions, 47 landmarks, 28 replicates, 9 bootstrap runs"},{"path":"/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Euclidean Distance Matrix Analysis in R","text":"Lele, S. R., 1991. comments coordinate-free scale-invariant methods morphometrics. American Journal Physical Anthropology 85:407–417. doi:10.1002/ajpa.1330850405 Lele, S. R., Richtsmeier, J. T., 1991. Euclidean distance matrix analysis: coordinate-free approach comparing biological shapes using landmark data. American Journal Physical Anthropology 86(3):415–27. doi:10.1002/ajpa.1330860307 Lele, S. R., Richtsmeier, J. T., 1992. comparing biological shapes: detection influential landmarks. American Journal Physical Anthropology 87:49–65. doi:10.1002/ajpa.1330870106 Lele, S. R., Richtsmeier, J. T., 1995. Euclidean distance matrix analysis: confidence intervals form growth differences. American Journal Physical Anthropology 98:73–86. doi:10.1002/ajpa.1330980107 Hu, L., 2007. Euclidean Distance Matrix Analysis Landmarks Data: Estimation Variance. Thesis, Master Science Statistics, Department Mathematical Statistical Sciences, University Alberta, Edmonton, Alberta, Canada. Pp. 49.","code":""},{"path":"/reference/edma_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Check and manipulate colors — edma_colors","title":"Check and manipulate colors — edma_colors","text":"Check manipulate default color values.","code":""},{"path":"/reference/edma_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check and manipulate colors — edma_colors","text":"","code":"edma_colors(n,     type=c(\"diverging\", \"sequential\", \"qualitative\"),     alpha=1, rev=FALSE)  plot_edma_colors(n=9, maxq=9)"},{"path":"/reference/edma_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check and manipulate colors — edma_colors","text":"n number colors (>0) palette. type type palette. alpha alpha transparency, number [0,1]. rev logical, colors reversed. maxq maximum number qualitative colors plot.","code":""},{"path":"/reference/edma_colors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check and manipulate colors — edma_colors","text":"edma_colors create vector n colors based settings getOption(\"edma_options\"). options can set via options (see Examples). options can either name palette hcl.colors. option set multiple values, treated colors interplolated colorRampPalette. qualitative palettes, color values used directly (recycled needed). Sequential palettes produced higher half diverging palette consistency.","code":""},{"path":"/reference/edma_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check and manipulate colors — edma_colors","text":"edma_colors returns vector hax color codes, plot_edma_colors produces plot diverging, sequential, qualitative default palettes given settings getOption(\"edma_options\").","code":""},{"path":"/reference/edma_colors.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check and manipulate colors — edma_colors","text":"Peter Solymos","code":""},{"path":[]},{"path":"/reference/edma_colors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check and manipulate colors — edma_colors","text":"","code":"## default palettes plot_edma_colors(101)   ## change default palettes op <- options(\"edma_options\" = list(     diverging = \"Green-Orange\",     qualitative = \"Dark 2\")) plot_edma_colors(101)   ## use color names options(\"edma_options\" = list(     diverging = c(\"black\", \"grey\", \"pink\"),     qualitative = \"Warm\")) plot_edma_colors(101)   ## reset defaults options(op) plot_edma_colors(101)"},{"path":"/reference/edma_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions for EDMA data objects — edma_data","title":"Functions for EDMA data objects — edma_data","text":"Functions reading, simulating, manipulating EDMA data.","code":""},{"path":"/reference/edma_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions for EDMA data objects — edma_data","text":"","code":"## read xyz files read_xyz(file, ...)  ## write xyz files write_xyz(x, file)  ## data generation edma_simulate_data(n, M, SigmaK)  ## print # S3 method for edma_data print(x, truncate=40, ...)  ## accessors # S3 method for edma_data dim(x) # S3 method for edma_data dimnames(x) landmarks(x, ...) dimensions(x, ...) specimens(x, ...) # S3 method for edma_data landmarks(x, ...) # S3 method for edma_data dimensions(x, ...) # S3 method for edma_data specimens(x, ...) landmarks(x) <- value dimensions(x) <- value specimens(x) <- value  ## subsetting # S3 method for edma_data subset(x, subset, ...) # S3 method for edma_data [(x, i, j, k)  ## coercion # S3 method for edma_data stack(x, ...) # S3 method for edma_data as.matrix(x, ...) # S3 method for edma_data as.data.frame(x, ...) # S3 method for edma_data as.array(x, ...) as.edma_data(x, ...) # S3 method for array as.edma_data(x, ...)  combine_data(a, b,     ga=\"G1\", gb=\"G2\") combine_data4(a1, a2, b1, b2,     ga1=\"A1\", ga2=\"A2\", gb1=\"B1\", gb2=\"B2\")  ## plot methods plot_2d(x, ...) plot_ord(x, ...) plot_clust(x, ...) # S3 method for edma_data plot(x, which=NULL,     ask=dev.interactive(), ...) # S3 method for edma_data plot_2d(x, which=NULL, ...) # S3 method for edma_data plot_ord(x, ...) # S3 method for edma_data plot_clust(x, ...)  ## dissimilarities # S3 method for edma_data as.dist(m, diag=FALSE, upper=FALSE)"},{"path":"/reference/edma_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions for EDMA data objects — edma_data","text":"file name file data read , written , see read.table details. x, m EDMA data object class 'edma_data'. subset specimens required. value possible value dimnames(x). ask logical, TRUE, user asked plot. subset, , j, k subset subsetting specimens (e.g. bootstrap). [, j, k] indices refer [landmarks, dimensions, specimens]. n, M, SigmaK number specimens (n), mean form matrix (M, K x D), variance-covariance matrix (K x K symmetric). truncate numeric, number characters print object title. diag, upper logical, indicating whether diagonal upper triangle distance matrix printed. See .dist. , b, a1, a2, b1, b2 EDMA data objects combined together. Landmarks must homologous (determined dimension names). ga, gb, ga1, ga2, gb1, gb2 character, group names prepended specimen names differentiate groups. ... arguments passed methods. read_xyz, arguments passed read.table.","code":""},{"path":"/reference/edma_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Functions for EDMA data objects — edma_data","text":"xyz landmark data following structure, see Examples: - Header: description data. - XYZ: indicates dimensions, XYZ means 3D landmark data. - 42L 3 9: dimensions, e.g. 42 landmarks (K), 3 dimensions (D), 9 specimens (n). - Landmark names, separated space. - stacked data landmark coordinates, e.g. 3 columns, space separated numeric values K*n rows, K landmarks per individuals stacked n times. - Blank line. - Date scans specimen (n rows), part also used get specimen IDs. reading simulating EDMA data object, methods help extracting info, manipulate objects. See Values Examples. EDMA data object (class 'edma_data') list two elements: $name data set name (header information .xyz file), $data list n matrices (list can named speciemen information present), matrix dimension K x D, dimension names matrices describing landmark names coordinate names.","code":""},{"path":"/reference/edma_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functions for EDMA data objects — edma_data","text":"edma_simulate_data returns EDMA data object class 'edma_data'. dim returns number landmarks (K), dimensions (D), specimens (n) data object. landmarks, dimensions, specimens dimensions names, dimnames returns list. Landmark names dimensions used check landmarks homogeneous among objects. possible set dimansion names dimnames(x) <- value value new value name. print method prints info data object. methods stack .matrix return stacked 2D array (K*n x D) landmark coordinates, .data.frame turns 2D stacked array data frame, .array returns 3D array (K x D x n). .edma_data turns 3D array EDMA data object, useful handle 3D array objects returned many functions geomorph package (.e. reding Morphologika, NTS, TPS files). combine_data combine_data4 combines 2 4 EDMA data sets together, landmarks must homologous. .dist calculates dissimilarity matrix (n x n, object class 'dist', see dist) containing pairwise dissimilarities among specimens. Dissimilarity based T-statistic (max/min distance) averaged (symmetric) log scale (self dissimilarity 0). subset [,j,k] returns EDMA data object desired dimensions permutations. See Examples. plot plot_2d produces series plots side effect, returning data object invisibly. functions provide diagnostics specimen just specimen selected argument. 2D projection used case 3D landmark data. convex hull specimens (excluding one selected) compared actual specimen's landmarks. allows easy spotting erroneous data. plot_ord plot_clust based dissimilarities among specimens provide ordination (metric multidimensional scaling using cmdscale based square rooted dissimilarities Cailliez's correction). hierarchical cluster dendrogram (using hclust function Ward's clustering method).","code":""},{"path":"/reference/edma_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Functions for EDMA data objects — edma_data","text":"Peter Solymos","code":""},{"path":[]},{"path":"/reference/edma_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functions for EDMA data objects — edma_data","text":"","code":"## read xyz files file <- system.file(     \"extdata/crouzon/Crouzon_P0_Global_MUT.xyz\",     package=\"EDMAinR\") x <- read_xyz(file) x #> EDMA data: Crouzon P0 MUT #> 47 landmarks, 3 dimensions, 28 specimens  ## test writing xyz file f <- tempfile(fileext = \".xyz\") write_xyz(x, file=f) tmp <- read_xyz(file=f) stopifnot(identical(dimnames(x), dimnames(tmp))) unlink(f)  ## the orignal structure l <- readLines(file) cat(l[1:10], sep=\"\\n\") #> Crouzon P0 MUT #> XYZ #> 47L 3 28  #> amsph bas cpsh ethma ethmp laalf lasph lflac lnsla lnslp locc loci lpalf lpfl lpmx lpns lpsh lpsq lpto lptyp lsqu lsyn lzya lzygo lzyt opi raalf rasph rflac rmaxi rnsla rnslp rocc roci rpalf rpfl rpmx rpns rpsh rpsq rpto rptyp rsqu rsyn rzya rzygo rzyt  #> 5.85485 5.98171 2.2017 #> 2.79418 6.2371 0.400282 #> 6.85584 5.80958 3.3537 #> 9.10866 5.82195 3.91282 #> 8.2508 5.81294 3.77622 #> 10.0935 6.17677 3.65059 cat(l[(length(l)-10):length(l)], sep=\"\\n\") #> CZCD1_37 Scanned on 010511 #> CZCD1_39 Scanned on 010511 #> CZCD1_40 Scanned on 010511 #> CZCD1_42 Scanned on 010511 #> CZCD1_53 Scanned on 122310 #> CZCD1_56 Scanned on 122310 #> CZCD1_59 Scanned on 122310 #> CZCD1_65 Scanned on 010511 #> CZCD1_66 Scanned on 010511 #> CZCD1_72 Scanned on 010311 #> CZCD1_73 Scanned on 010311  ## plots plot(x[,,1:5]) # steps through all individuals       plot_2d(x) # all speciemns in 1 plot plot_2d(x, which=2) # show specimen #2  plot_ord(x)  plot_clust(x)   ## dimensions and names dim(x) #> [1] 47  3 28 dimnames(x) #> [[1]] #>  [1] \"amsph\" \"bas\"   \"cpsh\"  \"ethma\" \"ethmp\" \"laalf\" \"lasph\" \"lflac\" \"lnsla\" #> [10] \"lnslp\" \"locc\"  \"loci\"  \"lpalf\" \"lpfl\"  \"lpmx\"  \"lpns\"  \"lpsh\"  \"lpsq\"  #> [19] \"lpto\"  \"lptyp\" \"lsqu\"  \"lsyn\"  \"lzya\"  \"lzygo\" \"lzyt\"  \"opi\"   \"raalf\" #> [28] \"rasph\" \"rflac\" \"rmaxi\" \"rnsla\" \"rnslp\" \"rocc\"  \"roci\"  \"rpalf\" \"rpfl\"  #> [37] \"rpmx\"  \"rpns\"  \"rpsh\"  \"rpsq\"  \"rpto\"  \"rptyp\" \"rsqu\"  \"rsyn\"  \"rzya\"  #> [46] \"rzygo\" \"rzyt\"  #>  #> [[2]] #> [1] \"X\" \"Y\" \"Z\" #>  #> [[3]] #>  [1] \"CZCD1_1\"  \"CZCD1_2\"  \"CZCD1_7\"  \"CZCD1_10\" \"CZCD1_11\" \"CZCD1_15\" #>  [7] \"CZCD1_16\" \"CZCD1_18\" \"CZCD1_20\" \"CZCD1_21\" \"CZCD1_23\" \"CZCD1_24\" #> [13] \"CZCD1_25\" \"CZCD1_28\" \"CZCD1_30\" \"CZCD1_32\" \"CZCD1_36\" \"CZCD1_37\" #> [19] \"CZCD1_39\" \"CZCD1_40\" \"CZCD1_42\" \"CZCD1_53\" \"CZCD1_56\" \"CZCD1_59\" #> [25] \"CZCD1_65\" \"CZCD1_66\" \"CZCD1_72\" \"CZCD1_73\" #>  landmarks(x) #>  [1] \"amsph\" \"bas\"   \"cpsh\"  \"ethma\" \"ethmp\" \"laalf\" \"lasph\" \"lflac\" \"lnsla\" #> [10] \"lnslp\" \"locc\"  \"loci\"  \"lpalf\" \"lpfl\"  \"lpmx\"  \"lpns\"  \"lpsh\"  \"lpsq\"  #> [19] \"lpto\"  \"lptyp\" \"lsqu\"  \"lsyn\"  \"lzya\"  \"lzygo\" \"lzyt\"  \"opi\"   \"raalf\" #> [28] \"rasph\" \"rflac\" \"rmaxi\" \"rnsla\" \"rnslp\" \"rocc\"  \"roci\"  \"rpalf\" \"rpfl\"  #> [37] \"rpmx\"  \"rpns\"  \"rpsh\"  \"rpsq\"  \"rpto\"  \"rptyp\" \"rsqu\"  \"rsyn\"  \"rzya\"  #> [46] \"rzygo\" \"rzyt\"  specimens(x) #>  [1] \"CZCD1_1\"  \"CZCD1_2\"  \"CZCD1_7\"  \"CZCD1_10\" \"CZCD1_11\" \"CZCD1_15\" #>  [7] \"CZCD1_16\" \"CZCD1_18\" \"CZCD1_20\" \"CZCD1_21\" \"CZCD1_23\" \"CZCD1_24\" #> [13] \"CZCD1_25\" \"CZCD1_28\" \"CZCD1_30\" \"CZCD1_32\" \"CZCD1_36\" \"CZCD1_37\" #> [19] \"CZCD1_39\" \"CZCD1_40\" \"CZCD1_42\" \"CZCD1_53\" \"CZCD1_56\" \"CZCD1_59\" #> [25] \"CZCD1_65\" \"CZCD1_66\" \"CZCD1_72\" \"CZCD1_73\" dimensions(x) #> [1] \"X\" \"Y\" \"Z\"  ## subsets x[1:10, 2:3, 1:5] #> EDMA data: Crouzon P0 MUT #> 10 landmarks, 2 dimensions, 5 specimens subset(x, 1:10) #> EDMA data: Crouzon P0 MUT #> 47 landmarks, 3 dimensions, 10 specimens  ## coercion str(as.matrix(x)) #>  num [1:1316, 1:3] 5.85 2.79 6.86 9.11 8.25 ... #>  - attr(*, \"dimnames\")=List of 2 #>   ..$ : chr [1:1316] \"CZCD1_1_amsph\" \"CZCD1_1_bas\" \"CZCD1_1_cpsh\" \"CZCD1_1_ethma\" ... #>   ..$ : chr [1:3] \"X\" \"Y\" \"Z\" str(as.data.frame(x)) #> 'data.frame':\t1316 obs. of  3 variables: #>  $ X: num  5.85 2.79 6.86 9.11 8.25 ... #>  $ Y: num  5.98 6.24 5.81 5.82 5.81 ... #>  $ Z: num  2.2 0.4 3.35 3.91 3.78 ... str(stack(x)) #>  num [1:1316, 1:3] 5.85 2.79 6.86 9.11 8.25 ... #>  - attr(*, \"dimnames\")=List of 2 #>   ..$ : chr [1:1316] \"CZCD1_1_amsph\" \"CZCD1_1_bas\" \"CZCD1_1_cpsh\" \"CZCD1_1_ethma\" ... #>   ..$ : chr [1:3] \"X\" \"Y\" \"Z\" str(as.array(x)) #>  num [1:47, 1:3, 1:28] 5.85 2.79 6.86 9.11 8.25 ... #>  - attr(*, \"dimnames\")=List of 3 #>   ..$ : chr [1:47] \"amsph\" \"bas\" \"cpsh\" \"ethma\" ... #>   ..$ : chr [1:3] \"X\" \"Y\" \"Z\" #>   ..$ : chr [1:28] \"CZCD1_1\" \"CZCD1_2\" \"CZCD1_7\" \"CZCD1_10\" ... as.edma_data(as.array(x)) #> EDMA data: Landmark data #> 47 landmarks, 3 dimensions, 28 specimens  ## simulate data K <- 3 # number of landmarks D <- 2 # dimension, 2 or 3 sig <- 0.75 rho <- 0 SigmaK <- sig^2*diag(1, K, K) + sig^2*rho*(1-diag(1, K, K)) M <- matrix(c(0,1,0,0,0,1), 3, 2) M[,1] <- M[,1] - mean(M[,1]) M[,2] <- M[,2] - mean(M[,2]) M <- 10*M  edma_simulate_data(10, M, SigmaK) #> EDMA data: Simulated landmark data #> 3 landmarks, 2 dimensions, 10 specimens"},{"path":"/reference/edma_fdm.html","id":null,"dir":"Reference","previous_headings":"","what":"Form difference — edma_fdm","title":"Form difference — edma_fdm","text":"Form difference matrix based inference based Lele Richtsmeier (1992, 1995).","code":""},{"path":"/reference/edma_fdm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Form difference — edma_fdm","text":"","code":"edma_fdm(numerator, denominator,   B=0, ref_denom=TRUE, mix=FALSE)  get_influence(object, ...) # S3 method for edma_dm get_influence(object, level=0.95, ...) # S3 method for edma_influence plot(x, ...)  get_fdm(object, ...) # S3 method for edma_fdm get_fdm(object, sort=FALSE, level=0.95,     what=\"all\", ...) global_test(object, ...) # S3 method for edma_fdm global_test(object, ...) # S3 method for edma_dm confint(object, parm, level=0.95, ...)  # S3 method for edma_fdm print(x, ...) # S3 method for edma_fdm landmarks(x, ...) # S3 method for edma_fdm dimensions(x, ...)  plot_ci(x, ...) plot_test(x, ...) # S3 method for edma_dm plot(x, ...) # S3 method for edma_dm plot_2d(x, ...) # S3 method for edma_dm plot_3d(x, ...) # S3 method for edma_dm plot_test(x, ...) # S3 method for edma_fdm plot_ci(x, ...) # S3 method for edma_fdm plot_ord(x, ...) # S3 method for edma_fdm plot_clust(x, ...)"},{"path":"/reference/edma_fdm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Form difference — edma_fdm","text":"numerator, denominator EDMA fit object compare forms. B nonnegative integer, number bootstrap replicates. ref_denom logical, TRUE, denominator used reference object (form matrix fixed calculating bootstrap comparing object). mix logical, use mixed bootstrap (numerator denominator populations mixed replacement) (non-reference population resampled replacement, reference fixed). x, object EDMA FDM object class 'edma_fdm'. sort logical, stacked distances sorted, see Examples. level numeric, 0 1, alpha level confidence interval. parm specification parameters given confidence intervals, either vector numbers vector names. See confint. part ford differences return: \"\", \"less\" \"greater\" 1, \"signif\" \"nonsignif\". ... arguments passed methods.","code":""},{"path":"/reference/edma_fdm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Form difference — edma_fdm","text":"Form difference (FDM) calculated ratio form matrices (FM) numerator denominator objects following Lele Richtsmeier (1992, 1995): FDM(,B) = FM(B)/FM(). Form matrices formed pairwise Euclidean distances landmarks EDMA fit objects using estimated mean forms. Bootstrap distribution based either 'mixed' mixed bootstrap distribution. 'mixed' bootstrap means bootstrap distribution represents n1+n2 specimens pooled sample numerator denominator populations. default mix=FALSE case fix reference FM taking ratio reference FM bootstrap FMs non-reference object (depending ref_denom argument). T-statistic based pairwise distanced FM, taking max/min distances. Confidence intervals local testing (via confint, get_fdm, plot_ci) T-test global testing (via global_test, plot_test) based observed T-statistic bootstrap distribution. global testing algorithm follows: Suppose population 1 'reference' population. Step 1: Resample n1 observations first sample compute FM1*. Step 2: Resample n2 observations first sample compute FM2*. Step 3: Compute FDM* = FM2*/FM1* T* = max(FDM*)/min(FDM*) Step 4: Repeat three steps B times get p-value. Local testing (CI: confidence interval calculation) elements FDM based following algorithm: Step 1: Resample n1 observations first sample compute FM1*. Step 2: Resample n2 observations second sample compute FM2*. Step 3: Compute FDM* = FM2*/FM1* Step 4: Repeat three steps B times get confidence intervals elements FDM. Influential landmarks identified leaving one landmark , comparing T-statistic value based landmarks. existing bootstrap distribution mean form used (.e. re-estimation mean form) get_influence.","code":""},{"path":"/reference/edma_fdm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Form difference — edma_fdm","text":"edma_fdm compares two EDMA fit objects calculates form difference. confint returns confidence intervals FDM, get_fdm extract stacked FDM confidence intervals, plot_ci visualizes ordered form differences confidence intervals. get_influence extracts landmark influence information, plot method visualizes . global_test presents global T-test, bootstrap distribution observed T-value visualized plot_test. plot plot_2d produces 2D plot mean form reference object ('prototype'). plot_3d use rgl package make 3D plot using mean form. Influential landmarks colored red. Lines represent distances landmarks, <1 differences colored blue, >1 differences colored red. plot_ord plot_clust produce plots based dissimilarities among specimens two objects.","code":""},{"path":"/reference/edma_fdm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Form difference — edma_fdm","text":"Lele, S. R., Richtsmeier, J. T., 1992. comparing biological shapes: detection influential landmarks. American Journal Physical Anthropology 87:49--65. <doi:10.1002/ajpa.1330870106> Lele, S. R., Richtsmeier, J. T., 1995. Euclidean distance matrix analysis: confidence intervals form growth differences. American Journal Physical Anthropology 98:73--86. <doi:10.1002/ajpa.1330980107>","code":""},{"path":"/reference/edma_fdm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Form difference — edma_fdm","text":"Peter Solymos, Subhash R. Lele, Theodore M. Cole, Joan T. Richtsmeier","code":""},{"path":[]},{"path":"/reference/edma_fdm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Form difference — edma_fdm","text":"","code":"file1 <- system.file(\"extdata/crouzon/Crouzon_P0_Global_MUT.xyz\",     package=\"EDMAinR\") x1 <- read_xyz(file1)  file2 <- system.file(\"extdata/crouzon/Crouzon_P0_Global_NON-MUT.xyz\",     package=\"EDMAinR\") x2 <- read_xyz(file2)  numerator <- edma_fit(x1, B=10) denominator <- edma_fit(x2, B=10)  fdm <- edma_fdm(numerator, denominator, B=10) fdm2 <- edma_fdm(numerator, denominator, B=10, ref_denom=FALSE) fdm #> EDMA form difference matrix #> Call: edma_fdm(numerator = numerator, denominator = denominator, B = 10) #> 10 bootstrap runs (ref: denominator) #> Tobs = 1.5981, p < 2.22e-16 fdm2 #> EDMA form difference matrix #> Call: edma_fdm(numerator = numerator, denominator = denominator, B = 10,  #>     ref_denom = FALSE) #> 10 bootstrap runs (ref: numerator) #> Tobs = 1.5981, p < 2.22e-16  head(get_fdm(fdm)) #>     row   col      dist     lower     upper #> 1   bas amsph 1.0425379 1.0294148 1.0515573 #> 2  cpsh amsph 0.9823765 0.9771460 1.0026669 #> 3 ethma amsph 1.0037761 0.9979926 1.0177054 #> 4 ethmp amsph 0.9401242 0.9290410 0.9601934 #> 5 laalf amsph 0.9878983 0.9806121 1.0040355 #> 6 lasph amsph 1.0161844 0.9991643 1.0226110 head(get_fdm(fdm, sort=TRUE, decreasing=TRUE)) #>       row   col     dist    lower    upper #> 136 ethmp ethma 1.377873 1.311678 1.447602 #> 697  rpto  lpto 1.131002 1.104345 1.169456 #> 179 laalf ethmp 1.095672 1.082856 1.113264 #> 200 raalf ethmp 1.094267 1.081481 1.113336 #> 881  rpmx raalf 1.080811 1.065532 1.095691 #> 607  rpns  lpns 1.078698 1.050963 1.125822 head(get_fdm(fdm, sort=TRUE, decreasing=FALSE)) #>        row   col      dist     lower     upper #> 527   lsqu  lpfl 0.8622059 0.8244294 0.9426540 #> 1022  rsqu  rpfl 0.8781312 0.8125590 0.9181044 #> 93   ethmp  cpsh 0.9034404 0.8855748 0.9275429 #> 212   rpsh ethmp 0.9177018 0.8980373 0.9371170 #> 190   lpsh ethmp 0.9181652 0.8980902 0.9462618 #> 4    ethmp amsph 0.9401242 0.9290410 0.9601934  global_test(fdm) #>  #> \tBootstrap based EDMA Tobs-test #>  #> data:  form difference matrix #> Tobs -value = 1.5981, B = 10, p-value < 2.2e-16 #>  global_test(fdm2) #>  #> \tBootstrap based EDMA Tobs-test #>  #> data:  form difference matrix #> Tobs -value = 1.5981, B = 10, p-value < 2.2e-16 #>   head(confint(fdm)) #>                  2.5%     97.5% #> bas-amsph   1.0294148 1.0515573 #> cpsh-amsph  0.9771460 1.0026669 #> ethma-amsph 0.9979926 1.0177054 #> ethmp-amsph 0.9290410 0.9601934 #> laalf-amsph 0.9806121 1.0040355 #> lasph-amsph 0.9991643 1.0226110  head(infl <- get_influence(fdm)) #>   landmark    Tdrop    lower    upper #> 1    amsph 1.598078 1.068145 1.504076 #> 2      bas 1.598078 1.068145 1.504076 #> 3     cpsh 1.598078 1.068145 1.504076 #> 4    ethma 1.311754 1.065905 1.289332 #> 5    ethmp 1.311754 1.065905 1.289332 #> 6    laalf 1.598078 1.068145 1.504076 plot(infl)   plot_ord(fdm)  plot_clust(fdm)  plot_test(fdm)  plot_ci(fdm)  plot_2d(fdm)  if (interactive())     plot_3d(fdm)"},{"path":"/reference/edma_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Nonparametric EDMA fit — edma_fit","title":"Nonparametric EDMA fit — edma_fit","text":"Estimate mean form SigmaKstar matrix based Lele (1991), Lele Richtsmeier (1991) Hu (2007).","code":""},{"path":"/reference/edma_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nonparametric EDMA fit — edma_fit","text":"","code":"edma_fit(x, B=0, ncores=getOption(\"Ncpus\", 1L))  ## generics Meanform(object, ...) SigmaKstar(object, ...) get_fm(object, ...)  ## methods # S3 method for edma_fit_np print(x, truncate=40, ...) # S3 method for edma_fit Meanform(object, ...) # S3 method for edma_fit SigmaKstar(object, ...) # S3 method for edma_fit get_fm(object, sort=FALSE, level=0.95, ...) # S3 method for edma_fit confint(object, parm, level=0.95, ...) # S3 method for edma_fit as.edma_data(x, ...)  ## plot methods plot_3d(x, ...) # S3 method for edma_fit plot(x, ...) # S3 method for edma_fit plot_2d(x, ...) # S3 method for edma_fit plot_3d(x, ...) # S3 method for edma_fit plot_ord(x, ...) # S3 method for edma_fit plot_clust(x, ...)  ## distance manipulation # S3 method for edma_fit as.dist(m, diag=FALSE, upper=FALSE) # S3 method for dist stack(x, ...)"},{"path":"/reference/edma_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nonparametric EDMA fit — edma_fit","text":"x, object, m EDMA data object class 'edma_data'. B nonnegative integer, number bootstrap replicates. ncores positive integer, number cores use bootstrapping. Use options(Ncpus = 2) set 2 globally. truncate numeric, number characters print object title. sort logical, stacked distances sorted, see Examples. level numeric, 0 1, alpha level confidence interval. parm specification parameters given confidence intervals, either vector numbers vector names. See confint. diag, upper logical, indicating whether diagonal upper triangle distance matrix printed. See .dist. ... arguments passed methods. E.g. plot_clust, method describing clustering agglomeration method used link{hclust} function (default \"ward.D2\").","code":""},{"path":"/reference/edma_fit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Nonparametric EDMA fit — edma_fit","text":"function estimates mean form SigmaKstar matrix based Lele (1991), Lele Richtsmeier (1991) Hu (2007).","code":""},{"path":"/reference/edma_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Nonparametric EDMA fit — edma_fit","text":"edma_fit returns EDMA fit object class 'edma_fit'. .edma_fit_np workhorse function behind edma_fit. stack.dist takes distance matrix class 'dist' turns long form data frame columns row col indicating row column labels, dist giving value cell. returns values lower triangle matrix. get_fm intended user interface extract form matrix (FM) EDMA fit objects. stacked distances based mean form. object bootstrap replicates, get_fm also returns confidence intervals distances based bootstrap confint method. Meanform extracts mean form (K x D) matrix, SigmaKstar extracts corresponding uncertainties (K x K) based EDMA fit object. plot plot_2d produces 2D plot mean form. 2D projection used case 3D landmark data based metric multidimensional scaling. plot_3d use rgl package make 3D plot. sizes dots correspond square root SigmaKstar diagonal elements. plot_ord plot_clust produce plots based dissimilarities among specimens, see plot_ord.edma_data details.","code":""},{"path":"/reference/edma_fit.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Nonparametric EDMA fit — edma_fit","text":"Lele, S. R., 1991. comments coordinate-free scale-invariant methods morphometrics. American Journal Physical Anthropology 85:407--417. <doi:10.1002/ajpa.1330850405> Lele, S. R., Richtsmeier, J. T., 1991. Euclidean distance matrix analysis: coordinate-free approach comparing biological shapes using landmark data. American Journal Physical Anthropology 86(3):415--27. <doi:10.1002/ajpa.1330860307> Hu, L., 2007. Euclidean Distance Matrix Analysis Landmarks Data: Estimation Variance. Thesis, Master Science Statistics, Department Mathematical Statistical Sciences, University Alberta, Edmonton, Alberta, Canada. Pp. 49.","code":""},{"path":"/reference/edma_fit.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Nonparametric EDMA fit — edma_fit","text":"Peter Solymos, Subhash R. Lele, Theodore M. Cole, Liangyuan Hu, Joan T. Richtsmeier","code":""},{"path":[]},{"path":"/reference/edma_fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Nonparametric EDMA fit — edma_fit","text":"","code":"file <- system.file(     \"extdata/crouzon/Crouzon_P0_Global_MUT.xyz\",     package=\"EDMAinR\") x <- read_xyz(file) x <- x[,,1:10] # 10 specimens  ## nonparametric fit fit <- edma_fit(x, B=9) fit #> EDMA nonparametric fit: Crouzon P0 MUT #> Call: edma_fit(x = x, B = 9) #> 47 landmarks, 3 dimensions, 10 specimens, 9 bootstrap runs str(Meanform(fit)) #>  num [1:47, 1:3] -0.753 -4.25 0.54 2.79 1.979 ... #>  - attr(*, \"dimnames\")=List of 2 #>   ..$ : chr [1:47] \"amsph\" \"bas\" \"cpsh\" \"ethma\" ... #>   ..$ : chr [1:3] \"X\" \"Y\" \"Z\" str(SigmaKstar(fit)) #>  num [1:47, 1:47] -0.000789 -0.000863 -0.002257 -0.00254 -0.000231 ... #>  - attr(*, \"dimnames\")=List of 2 #>   ..$ : chr [1:47] \"amsph\" \"bas\" \"cpsh\" \"ethma\" ... #>   ..$ : chr [1:47] \"amsph\" \"bas\" \"cpsh\" \"ethma\" ...  ## form matrix str(as.dist(fit)) #>  'edma_dist' num [1:1081] 3.56 1.54 3.61 2.84 4.44 ... #>  - attr(*, \"Size\")= int 47 #>  - attr(*, \"Labels\")= chr [1:47] \"amsph\" \"bas\" \"cpsh\" \"ethma\" ... #>  - attr(*, \"Diag\")= logi FALSE #>  - attr(*, \"Upper\")= logi FALSE #>  - attr(*, \"method\")= chr \"euclidean\" #>  - attr(*, \"call\")= language dist(x = Meanform(m), diag = diag, upper = upper) str(stack(as.dist(fit))) #> 'data.frame':\t1081 obs. of  3 variables: #>  $ row : Factor w/ 46 levels \"bas\",\"cpsh\",\"ethma\",..: 1 2 3 4 5 6 7 8 9 10 ... #>  $ col : Factor w/ 46 levels \"amsph\",\"bas\",..: 1 1 1 1 1 1 1 1 1 1 ... #>  $ dist: num  3.56 1.54 3.61 2.84 4.44 ...  head(get_fm(fit)) #>     row   col     dist    lower    upper #> 1   bas amsph 3.564776 3.503525 3.592352 #> 2  cpsh amsph 1.536155 1.494105 1.571615 #> 3 ethma amsph 3.611062 3.564423 3.625830 #> 4 ethmp amsph 2.844704 2.810957 2.899812 #> 5 laalf amsph 4.439686 4.376478 4.470471 #> 6 lasph amsph 1.685653 1.643265 1.744181 head(get_fm(fit, sort=TRUE, decreasing=TRUE)) #>       row   col     dist    lower    upper #> 435 rnsla  locc 10.44243 10.27673 10.57457 #> 357   opi lnsla 10.43767 10.28900 10.54325 #> 855 rnsla   opi 10.43731 10.27855 10.57532 #> 364  rocc lnsla 10.42825 10.25043 10.55418 #> 342  locc lnsla 10.41463 10.25685 10.51666 #> 854 rmaxi   opi 10.40513 10.30355 10.49539 head(get_fm(fit, sort=TRUE, decreasing=FALSE)) #>       row   col      dist     lower     upper #> 400 rnslp lnslp 0.1360938 0.1249340 0.1523990 #> 362 rnsla lnsla 0.2260131 0.2158758 0.2380533 #> 977  roci  rocc 0.5124857 0.4709953 0.5372143 #> 416  loci  locc 0.5153279 0.4884795 0.5418752 #> 127  rpsh  cpsh 0.5253504 0.5085069 0.5501219 #> 105  lpsh  cpsh 0.5722943 0.5392541 0.6184208  plot_ord(fit)  plot_clust(fit)  plot(fit) plot_2d(fit)  if (interactive())     plot_3d(fit)"},{"path":"/reference/edma_gdm.html","id":null,"dir":"Reference","previous_headings":"","what":"Growth difference — edma_gdm","title":"Growth difference — edma_gdm","text":"Growth matrix growth difference matrix based inference based Lele Richtsmeier (1992, 1995).","code":""},{"path":"/reference/edma_gdm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Growth difference — edma_gdm","text":"","code":"edma_gm(a1, a2, ...) get_gm(object, ...) # S3 method for edma_gm get_gm(object, sort=FALSE, level=0.95,     what=\"all\", ...)  edma_gdm(a1, a2, b1, b2, ...) get_gdm(object, ...) # S3 method for edma_gdm get_gdm(object, sort=FALSE, level=0.95,     what=\"all\", ...)  # S3 method for edma_gm print(x, ...) # S3 method for edma_gdm print(x, ...) # S3 method for edma_gm global_test(object, ...) # S3 method for edma_gdm global_test(object, ...) # S3 method for edma_gdm landmarks(x, ...) # S3 method for edma_gdm dimensions(x, ...)  # S3 method for edma_gdm plot_ord(x, ...) # S3 method for edma_gdm plot_clust(x, ...)"},{"path":"/reference/edma_gdm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Growth difference — edma_gdm","text":"a1, a2, b1, b2 EDMA fit object compare growths. x, object EDMA GM GDM objects. sort logical, stacked distances sorted, see Examples. level numeric, 0 1, alpha level confidence interval. part ford differences return: \"\", \"less\" \"greater\" 1, \"signif\" \"nonsignif\". ... arguments passed edma_fdm, like ref_denom.","code":""},{"path":"/reference/edma_gdm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Growth difference — edma_gdm","text":"Growth matrix (GM) calculated ratio form matrices (FM) numerator denominator objects following Lele Richtsmeier (1992, 1995): GM(A1,A2) = FM(A2)/FM(A1). Form matrices formed pairwise Euclidean distances landmarks EDMA fit objects using estimated mean forms. Growth difference matrix (GDM) calculated GDM(A1,A2,B1,B2) = GM(B1,B2) / GM(A1,A2). Inference visualization similar done FDMs.","code":""},{"path":"/reference/edma_gdm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Growth difference — edma_gdm","text":"edma_gm compares two EDMA fit objects calculates GM. edma_gdm compares 4 EDMA fit objects calculates GDM. plot_ord plot_clust produce plots based dissimilarities among specimens 2 4 objects (GM GDM, respectively).","code":""},{"path":"/reference/edma_gdm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Growth difference — edma_gdm","text":"Lele, S. R., Richtsmeier, J. T., 1992. comparing biological shapes: detection influential landmarks. American Journal Physical Anthropology 87:49--65. <doi:10.1002/ajpa.1330870106> Lele, S. R., Richtsmeier, J. T., 1995. Euclidean distance matrix analysis: confidence intervals form growth differences. American Journal Physical Anthropology 98:73--86. <doi:10.1002/ajpa.1330980107>","code":""},{"path":"/reference/edma_gdm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Growth difference — edma_gdm","text":"Peter Solymos, Subhash R. Lele, Theodore M. Cole, Joan T. Richtsmeier","code":""},{"path":[]},{"path":"/reference/edma_gdm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Growth difference — edma_gdm","text":"","code":"file_a1 <- system.file(\"extdata/growth/CZEM_wt_global.xyz\",     package=\"EDMAinR\") file_a2 <- system.file(\"extdata/growth/CZP0_wt_global.xyz\",     package=\"EDMAinR\")  l <- c(\"amsph\", \"bas\", \"loci\", \"lpto\", \"lsqu\",         \"lsyn\", \"roci\", \"rpto\", \"rsqu\", \"rsyn\")  a1 <- read_xyz(file_a1)[l,,] a2 <- read_xyz(file_a2)[l,,] a1 #> EDMA data: Crouzon unaffected embryonic mouse #> 10 landmarks, 3 dimensions, 31 specimens a2 #> EDMA data: Crouzon unaffected newborn mouse #> 10 landmarks, 3 dimensions, 11 specimens  fit_a1 <- edma_fit(a1, B=10) fit_a2 <- edma_fit(a2, B=10)  ## --- growth matrix ---  gm <- edma_gm(a1=fit_a1, a2=fit_a2, B=10) gm #> EDMA growth matrix #> Call: edma_gm(a1 = fit_a1, a2 = fit_a2, B = 10) #> 10 bootstrap runs (ref: denominator) #> Tobs = 1.259, p < 2.22e-16 global_test(gm) #>  #> \tBootstrap based EDMA G-test #>  #> data:  growth matrix #> G -value = 1.259, B = 10, p-value < 2.2e-16 #>  head(confint(gm)) #>                2.5%    97.5% #> bas-amsph  1.098286 1.129447 #> loci-amsph 1.087711 1.122313 #> lpto-amsph 1.129613 1.154855 #> lsqu-amsph 1.128924 1.180152 #> lsyn-amsph 1.117893 1.150160 #> roci-amsph 1.086130 1.121514 head(get_gm(gm)) #>    row   col     dist    lower    upper #> 1  bas amsph 1.116726 1.098286 1.129447 #> 2 loci amsph 1.112833 1.087711 1.122313 #> 3 lpto amsph 1.144189 1.129613 1.154855 #> 4 lsqu amsph 1.149705 1.128924 1.180152 #> 5 lsyn amsph 1.139680 1.117893 1.150160 #> 6 roci amsph 1.110515 1.086130 1.121514 head(get_gm(gm, sort=TRUE, decreasing=TRUE)) #>     row  col     dist    lower    upper #> 45 rsyn rsqu 1.196344 1.175489 1.217173 #> 31 lsyn lsqu 1.194661 1.166476 1.219401 #> 41 rsqu roci 1.159037 1.137300 1.166941 #> 35 rsyn lsqu 1.155865 1.133920 1.178853 #> 19 lsqu loci 1.155629 1.134197 1.162690 #> 16 rsqu  bas 1.155440 1.143204 1.167108 head(get_gm(gm, sort=TRUE, decreasing=FALSE)) #>     row  col      dist     lower    upper #> 28 rpto lpto 0.9502249 0.9103352 1.001992 #> 34 rsqu lsqu 1.0364970 1.0230670 1.050673 #> 21 roci loci 1.0365211 1.0108008 1.048766 #> 27 roci lpto 1.0423805 1.0279959 1.061963 #> 22 rpto loci 1.0515532 1.0313671 1.065774 #> 29 rsqu lpto 1.0610708 1.0500582 1.070469  plot_ord(gm)  plot_clust(gm)  plot_test(gm)  plot_ci(gm)  plot_2d(gm)  if (interactive())     plot_3d(gm)  ## --- growth difference matrix ---  file_b1 <- system.file(\"extdata/growth/CZEM_mut_global.xyz\",     package=\"EDMAinR\") file_b2 <- system.file(\"extdata/growth/CZP0_mut_global.xyz\",     package=\"EDMAinR\")  b1 <- read_xyz(file_b1)[l,,] b2 <- read_xyz(file_b2)[l,,] b1 #> EDMA data: Crouzon mutant embryonic mouse #> 10 landmarks, 3 dimensions, 18 specimens b2 #> EDMA data: Crouzon mutant newborn mouse #> 10 landmarks, 3 dimensions, 11 specimens  fit_b1 <- edma_fit(b1, B=10) fit_b2 <- edma_fit(b2, B=10)  gdm <- edma_gdm(a1=fit_a1, a2=fit_a2, b1=fit_b1, b2=fit_b2, B=10) gdm #> EDMA growth difference matrix #> Call: edma_gdm(a1 = fit_a1, a2 = fit_a2, b1 = fit_b1, b2 = fit_b2,  #>     B = 10) #> 10 bootstrap runs (ref: denominator) #> Tobs = 1.1113, p = 0.27273 global_test(gdm) #>  #> \tBootstrap based EDMA G-test #>  #> data:  growth difference matrix #> G -value = 1.1113, B = 11, p-value = 0.2727 #>  head(confint(gdm)) #>                 2.5%     97.5% #> bas-amsph  0.9915716 1.0368321 #> loci-amsph 0.9781170 1.0257089 #> lpto-amsph 0.9774645 1.0097597 #> lsqu-amsph 0.9748169 0.9997238 #> lsyn-amsph 0.9864931 1.0313089 #> roci-amsph 0.9747043 1.0231884 head(get_gdm(gdm)) #>    row   col      dist     lower     upper #> 1  bas amsph 0.9871097 0.9915716 1.0368321 #> 2 loci amsph 0.9962675 0.9781170 1.0257089 #> 3 lpto amsph 0.9935320 0.9774645 1.0097597 #> 4 lsqu amsph 1.0057657 0.9748169 0.9997238 #> 5 lsyn amsph 0.9844980 0.9864931 1.0313089 #> 6 roci amsph 0.9981683 0.9747043 1.0231884 head(get_gdm(gdm, sort=TRUE, decreasing=TRUE)) #>     row   col     dist     lower     upper #> 39 rsyn  lsyn 1.040292 0.9078684 0.9896739 #> 18 lpto  loci 1.013272 0.9446575 1.0240004 #> 40 rpto  roci 1.010858 0.9487873 0.9977089 #> 36 roci  lsyn 1.010448 0.9596945 1.0071426 #> 21 roci  loci 1.008071 0.9443650 1.0318483 #> 9  rsyn amsph 1.007449 0.9596942 1.0107837 head(get_gdm(gdm, sort=TRUE, decreasing=FALSE)) #>     row  col      dist     lower    upper #> 43 rsqu rpto 0.9361207 1.0303048 1.067071 #> 25 lsqu lpto 0.9485414 1.0157609 1.077698 #> 29 rsqu lpto 0.9569724 1.0006861 1.067052 #> 33 rpto lsqu 0.9666629 0.9913131 1.051787 #> 41 rsqu roci 0.9766552 0.9979848 1.039299 #> 19 lsqu loci 0.9791661 0.9953173 1.036952  plot_ord(gdm)  plot_clust(gdm)  plot_test(gdm)  plot_ci(gdm)  plot_2d(gdm) # need real data  if (interactive())     plot_3d(gdm)"},{"path":"/reference/edma_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale an EDMA data object — edma_scale","title":"Scale an EDMA data object — edma_scale","text":"function implements landmark scaling procedures described Lele Cole (1996) used rescale landmarks specimens variance-covariance matrices two populations unequal.","code":""},{"path":"/reference/edma_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale an EDMA data object — edma_scale","text":"","code":"edma_scale(x, scale_by, L1 = NULL, L2 = NULL, scale_constant = NULL)"},{"path":"/reference/edma_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale an EDMA data object — edma_scale","text":"x EDMA data object class edma_data. scale_by string specifying type scaling. Valid options \"constant\", \"endpoints\", \"geometric_mean\",  \"maximum\", \"median\", \"sneath\". See details. L1 string specifying first landmark use scale_by = \"endpoints\" L2 string specifying second landmark use scale_by = \"endpoints\" scale_constant numeric specifying scaling constant use scale_by = \"constant\"","code":""},{"path":"/reference/edma_scale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scale an EDMA data object — edma_scale","text":"object class 'edma_data', landmarks scaled according scale_by parameter. See details details scaling procedures. object x appended list including scaling method string values used scaling. latter can useful comparisons, e.g., geometric means.","code":""},{"path":"/reference/edma_scale.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scale an EDMA data object — edma_scale","text":"scale_by determines interlandmark scaling value. Options : constant Interlandmark distances scaled numeric constant applied specimens. endpoints Interlandmark distances scaled distance pair landmarks (L1 L2) specimen. geometric mean Interlandmark distances scaled th geometric mean pairwise distances specimen. maximum Interlandmark distances scaled maximum pairwise distances specimen. median Interlandmark distances scaled median pairwise distances specimen. sneath  Interlandmark distances scaled using method described Sneath (1967), uses square-root mean squared distances landmark centroid. Also see Creel (1986).","code":""},{"path":"/reference/edma_scale.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Scale an EDMA data object — edma_scale","text":"Creel, N. 1986. Size Phylogeny Hominoid Primates. Syst. Zool. 35:81-99. Lele, S., T. M. Cole III. 1996. new test shape differences variance-covariance matrices unequal. J. Hum. Evol. 31:193-212. Sneath, P. H. . 1967. Trend-surface analysis transformation grids. J. Zool. 151:65-122. Wiley.","code":""},{"path":"/reference/edma_scale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scale an EDMA data object — edma_scale","text":"","code":"# Following the example in Lele and Cole (1996) X <- matrix(c(0, 0, 2, 3, 4, 1), byrow = TRUE, ncol = 2) Y <- matrix(c(0, 0, 3, 3, 3, 0), byrow = TRUE, ncol = 2)  # Bind matrices into 3d array and convert to edma_data XY <- as.edma_data(array(dim = c(3, 2, 2),                          data = cbind(X, Y)))  # Scale by a constant XY_const <- edma_scale(XY, scale_by = \"constant\", scale_constant = 2) print(XY_const) #> EDMA data: Landmark data #> 3 landmarks, 2 dimensions, 2 specimens #> Landmarks scaled using: constant  XY_const$data #> $S1 #>     X          Y #> L1 -1 -0.6666667 #> L2  0  0.8333333 #> L3  1 -0.1666667 #>  #> $S2 #>       X    Y #> L1 -1.0 -0.5 #> L2  0.5  1.0 #> L3  0.5 -0.5 #>  XY_const$scale #> $method #> [1] \"constant\" #>  #> $values #> $values$S1 #> [1] 2 #>  #> $values$S2 #> [1] 2 #>  #>   # Scale by distance between two landmarks XY_endpt <- edma_scale(XY, scale_by = \"endpoints\", L1 = \"L1\", L2 = \"L3\") print(XY_endpt) #> EDMA data: Landmark data #> 3 landmarks, 2 dimensions, 2 specimens #> Landmarks scaled using: endpoints L1 and L3  XY_endpt$data #> $S1 #>             X           Y #> L1 -0.4850713 -0.32338083 #> L2  0.0000000  0.40422604 #> L3  0.4850713 -0.08084521 #>  #> $S2 #>             X          Y #> L1 -0.6666667 -0.3333333 #> L2  0.3333333  0.6666667 #> L3  0.3333333 -0.3333333 #>  XY_endpt$scale #> $method #> [1] \"endpoints L1 and L3\" #>  #> $values #> $values$S1 #> [1] 4.123106 #>  #> $values$S2 #> [1] 3 #>  #>   # Scale by geometric mean of all interlandmark distances XY_geomean <- edma_scale(XY, scale_by = \"geometric_mean\") print(XY_geomean) #> EDMA data: Landmark data #> 3 landmarks, 2 dimensions, 2 specimens #> Landmarks scaled using: geometric_mean  XY_geomean$data #> $S1 #>             X           Y #> L1 -0.5751524 -0.38343495 #> L2  0.0000000  0.47929368 #> L3  0.5751524 -0.09585874 #>  #> $S2 #>             X          Y #> L1 -0.5939325 -0.2969662 #> L2  0.2969662  0.5939325 #> L3  0.2969662 -0.2969662 #>  XY_geomean$scale #> $method #> [1] \"geometric_mean\" #>  #> $values #> $values$S1 #> [1] 3.477339 #>  #> $values$S2 #> [1] 3.367386 #>  #>   # Scale by maximum of all interlandmark distances XY_max <- edma_scale(XY, scale_by = \"maximum\") print(XY_max) #> EDMA data: Landmark data #> 3 landmarks, 2 dimensions, 2 specimens #> Landmarks scaled using: maximum  XY_max$data #> $S1 #>             X           Y #> L1 -0.4850713 -0.32338083 #> L2  0.0000000  0.40422604 #> L3  0.4850713 -0.08084521 #>  #> $S2 #>             X          Y #> L1 -0.4714045 -0.2357023 #> L2  0.2357023  0.4714045 #> L3  0.2357023 -0.2357023 #>  XY_max$scale #> $method #> [1] \"maximum\" #>  #> $values #> $values$S1 #> [1] 4.123106 #>  #> $values$S2 #> [1] 4.242641 #>  #>   # Scale by median of all interlandmark distances XY_median <- edma_scale(XY, scale_by = \"median\") print(XY_median) #> EDMA data: Landmark data #> 3 landmarks, 2 dimensions, 2 specimens #> Landmarks scaled using: median  XY_median$data #> $S1 #>             X           Y #> L1 -0.5547002 -0.36980013 #> L2  0.0000000  0.46225016 #> L3  0.5547002 -0.09245003 #>  #> $S2 #>             X          Y #> L1 -0.6666667 -0.3333333 #> L2  0.3333333  0.6666667 #> L3  0.3333333 -0.3333333 #>  XY_median$scale #> $method #> [1] \"median\" #>  #> $values #> $values$S1 #> [1] 3.605551 #>  #> $values$S2 #> [1] 3 #>  #>   # Scale using root mean squared distance from each landmark to # the centroid (Sneath, 1967). XY_sneath <- edma_scale(XY, scale_by = \"sneath\") print(XY_sneath) #> EDMA data: Landmark data #> 3 landmarks, 2 dimensions, 2 specimens #> Landmarks scaled using: sneath  XY_sneath$data #> $S1 #>             X          Y #> L1 -0.9733285 -0.6488857 #> L2  0.0000000  0.8111071 #> L3  0.9733285 -0.1622214 #>  #> $S2 #>       X    Y #> L1 -1.0 -0.5 #> L2  0.5  1.0 #> L3  0.5 -0.5 #>  XY_sneath$scale #> $method #> [1] \"sneath\" #>  #> $values #> $values$S1 #> [1] 2.054805 #>  #> $values$S2 #> [1] 2 #>  #>"},{"path":"/reference/edma_sdm.html","id":null,"dir":"Reference","previous_headings":"","what":"Shape difference — edma_sdm","title":"Shape difference — edma_sdm","text":"Shape difference matrix based inference following Lele Cole (1996).","code":""},{"path":"/reference/edma_sdm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shape difference — edma_sdm","text":"","code":"edma_sdm(a, b, log=TRUE, size=TRUE, edge = NULL) get_sdm(object, ...) # S3 method for edma_sdm get_sdm(object, sort=FALSE,     level = 0.95, ...)  # S3 method for edma_sdm print(x, level = 0.95, ...) Z_test(object, ...) # S3 method for edma_sdm Z_test(object, level = 0.95, ...) # S3 method for edma_sdm landmarks(x, ...) # S3 method for edma_sdm dimensions(x, ...)  # S3 method for edma_sdm confint(object, parm, level=0.95, ...) # S3 method for edma_sdm get_influence(object, statistic=c(\"Z\", \"C\"),     level=0.95, ...)  plot_Ztest(x, ...) # S3 method for edma_sdm plot_Ztest(x, statistic=c(\"Z\", \"C\"),     level = 0.95, ...)"},{"path":"/reference/edma_sdm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shape difference — edma_sdm","text":", b EDMA fit object compare shapes. x, object SDM object. log logical, form matrix log transformed calculating differences. size logical, size difference (C) estimated (TRUE) fixed 1 (FALSE). edge numeric character, numeric IDs name 2 landmarks used calculate C (C=db/da, da db edge distances two landmarks object b respectively). C calculated using total least squares (TLS) edge=NULL. sort logical, stacked distances sorted, see Examples. level numeric, 0 1, alpha level confidence interval. parm specification parameters given confidence intervals, either vector numbers vector names. See confint. statistic character, Z C statistic plotted. ... arguments passed functions.","code":""},{"path":"/reference/edma_sdm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Shape difference — edma_sdm","text":"Shape difference matrix (SDM) defined difference scaled form matrices S() S(B). S() = C * FM(), S(B) = FM(B), C scaling factor calculated using total least squares (TLS). Shape difference matrix S() - S(B) log=FALSE log(S()) - log(S(B)) log=TRUE. Inference visualization similar done FDMs. Note: original implementation usinga particular edge calculate size (C) parameter (size=TRUE edge NULL). edge=NULL uses total least squares estimate C based edges landmarks. size=FALSE set C=1, assuming sizez .","code":""},{"path":"/reference/edma_sdm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shape difference — edma_sdm","text":"edma_sdm compares 2 EDMA fit objects calculates SDM.","code":""},{"path":"/reference/edma_sdm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Shape difference — edma_sdm","text":"Lele, S. R., Cole, T. M. III., 1996. new test shape differences variance-covariance matrices unequal. Journal Human Evolution 31:193--212. <doi:10.1006/jhev.1996.0057>","code":""},{"path":"/reference/edma_sdm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Shape difference — edma_sdm","text":"Peter Solymos, Subhash R. Lele, Theodore M. Cole","code":""},{"path":[]},{"path":"/reference/edma_sdm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shape difference — edma_sdm","text":"","code":"file_a <- system.file(\"extdata/growth/CZP0_wt_global.xyz\",     package=\"EDMAinR\") file_b <- system.file(\"extdata/growth/CZP0_mut_global.xyz\",     package=\"EDMAinR\") l <- c(\"amsph\", \"bas\", \"loci\", \"lpto\", \"lsqu\",         \"lsyn\", \"roci\", \"rpto\", \"rsqu\", \"rsyn\")  a <- read_xyz(file_a)[l,,] b <- read_xyz(file_b)[l,,] a #> EDMA data: Crouzon unaffected newborn mouse #> 10 landmarks, 3 dimensions, 11 specimens b #> EDMA data: Crouzon mutant newborn mouse #> 10 landmarks, 3 dimensions, 11 specimens  fit_a <- edma_fit(a, B=10) fit_b <- edma_fit(b, B=10)  sdm <- edma_sdm(a=fit_a, b=fit_b) sdm #> EDMA shape difference matrix #> Call: edma_sdm(a = fit_a, b = fit_b) #> 10 bootstrap runs (difference of logarithms) #>  #>               2.5%    97.5% #> Z (shape) -0.12315 0.078195 #> C (scale)  1.00710 1.028947 Z_test(sdm) #> Bootstrap based EDMA Z-test #> 10 bootstrap runs #>  #>              2.5%   97.5% #> Z (shape) -0.1232 0.07819 #> C (scale)  1.0071 1.02895 head(confint(sdm)) #>                    2.5%        97.5% #> bas-amsph  -0.029487476 -0.014229265 #> loci-amsph -0.019440490 -0.007616788 #> lpto-amsph -0.034410862 -0.021164403 #> lsqu-amsph  0.002062971  0.025023641 #> lsyn-amsph -0.017521145  0.004158820 #> roci-amsph -0.016856790 -0.007926380 head(get_sdm(sdm)) #>    row   col         sdm        lower        upper #> 1  bas amsph -0.02392208 -0.029487476 -0.014229265 #> 2 loci amsph -0.01400145 -0.019440490 -0.007616788 #> 3 lpto amsph -0.02582129 -0.034410862 -0.021164403 #> 4 lsqu amsph  0.01659426  0.002062971  0.025023641 #> 5 lsyn amsph -0.00905969 -0.017521145  0.004158820 #> 6 roci amsph -0.01156002 -0.016856790 -0.007926380 head(get_sdm(sdm, sort=TRUE, decreasing=TRUE)) #>     row  col        sdm      lower      upper #> 43 rsqu rpto 0.05906804 0.03520501 0.08276183 #> 25 lsqu lpto 0.04367016 0.03568473 0.05877332 #> 31 lsyn lsqu 0.03351607 0.02497865 0.03894468 #> 41 rsqu roci 0.02675907 0.01960036 0.03969825 #> 45 rsyn rsqu 0.02636038 0.00629132 0.03922674 #> 19 lsqu loci 0.02269395 0.01654100 0.02769915 head(get_sdm(sdm, sort=TRUE, decreasing=FALSE)) #>     row  col         sdm       lower       upper #> 28 rpto lpto -0.07900089 -0.12315127 -0.04698995 #> 13 lsyn  bas -0.04078567 -0.05528032 -0.02692574 #> 39 rsyn lsyn -0.03605782 -0.04651451 -0.01456456 #> 17 rsyn  bas -0.03495021 -0.04455519 -0.02488746 #> 37 rpto lsyn -0.03361166 -0.04205454 -0.02519528 #> 22 rpto loci -0.03326119 -0.04262783 -0.02239645  get_influence(sdm) #>    landmark       Zdrop       lower      upper #> 1     amsph -0.08151834 -0.12572159 0.07534861 #> 2       bas -0.07936769 -0.12272631 0.07756928 #> 3      loci -0.07874282 -0.12286096 0.07754190 #> 4      lpto  0.05483618 -0.05046084 0.08010945 #> 5      lsqu -0.07154565 -0.11575993 0.08943609 #> 6      lsyn -0.08022249 -0.12419779 0.07679128 #> 7      roci -0.07798099 -0.12180816 0.08400709 #> 8      rpto -0.04583163 -0.05896161 0.05307541 #> 9      rsqu -0.07155860 -0.11487683 0.02150563 #> 10     rsyn -0.08005630 -0.12393985 0.07696550  plot_Ztest(sdm, \"Z\")  plot_Ztest(sdm, \"C\")  plot_ci(sdm)   plot(get_influence(sdm))"},{"path":"/reference/edmainr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Euclidean Distance Matrix Analysis in R — EDMAinR-package","title":"Euclidean Distance Matrix Analysis in R — EDMAinR-package","text":"coordinate-free approach comparing      biological shapes using landmark data based     Lele Richtsmeier (1991) <doi:10.1002/ajpa.1330860307>.","code":""},{"path":"/reference/edmainr-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Euclidean Distance Matrix Analysis in R — EDMAinR-package","text":"EDMA data: read_xyz Nonparametric fit: edma_fit Form difference: edma_fdm Growth growth difference: edma_gm, edma_gdm Shape difference: edma_sdm","code":""},{"path":"/reference/edmainr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Euclidean Distance Matrix Analysis in R — EDMAinR-package","text":"NA Maintainer: NA","code":""},{"path":"/reference/edmainr-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Euclidean Distance Matrix Analysis in R — EDMAinR-package","text":"Lele, S. R., 1991. comments coordinate-free scale-invariant methods morphometrics. American Journal Physical Anthropology 85:407--417. <doi:10.1002/ajpa.1330850405> Lele, S. R., Richtsmeier, J. T., 1991. Euclidean distance matrix analysis: coordinate-free approach comparing biological shapes using landmark data. American Journal Physical Anthropology 86(3):415--27. <doi:10.1002/ajpa.1330860307> Lele, S. R., Richtsmeier, J. T., 1992. comparing biological shapes: detection influential landmarks. American Journal Physical Anthropology 87:49--65. <doi:10.1002/ajpa.1330870106> Lele, S. R., Richtsmeier, J. T., 1995. Euclidean distance matrix analysis: confidence intervals form growth differences. American Journal Physical Anthropology 98:73--86. <doi:10.1002/ajpa.1330980107> Hu, L., 2007. Euclidean Distance Matrix Analysis Landmarks Data: Estimation Variance. Thesis, Master Science Statistics, Department Mathematical Statistical Sciences, University Alberta, Edmonton, Alberta, Canada. Pp. 49. Lele, S. R., Cole, T. M. III., 1996. new test shape differences variance-covariance matrices unequal. Journal Human Evolution 31:193--212. <doi:10.1006/jhev.1996.0057>","code":""},{"path":"/reference/gpa_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"GPA — gpa_fit","title":"GPA — gpa_fit","text":"Fit GPA WGPA landmark data.","code":""},{"path":"/reference/gpa_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GPA — gpa_fit","text":"","code":"gpa_fit(x, B = 0, ncores = getOption(\"Ncpus\", 1L),     weighted=FALSE, ...) # S3 method for gpa_fit print(x, truncate=40, ...)"},{"path":"/reference/gpa_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GPA — gpa_fit","text":"x EDMA data object class 'edma_data'. B nonnegative integer, number bootstrap replicates. weighted logical, use shapes::procWGPA instead shapes::procGPA. ncores positive integer, number cores use bootstrapping. Use options(Ncpus = 2) set 2 globally. truncate numeric, number characters print object title. ... arguments passed shapes::procGPA shapes::procWGPA.","code":""},{"path":"/reference/gpa_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GPA — gpa_fit","text":"Returns form matrix, SigmaKstar NA.","code":""},{"path":"/reference/gpa_fit.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"GPA — gpa_fit","text":"Gower, J.C. (1975). Generalized Procrustes analysis, Psychometrika, 40, 33--50.","code":""},{"path":"/reference/gpa_fit.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"GPA — gpa_fit","text":"Peter Solymos wrote wrapper shapes::procGPA.","code":""},{"path":"/reference/gpa_fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GPA — gpa_fit","text":"","code":"file <- system.file(     \"extdata/crouzon/Crouzon_P0_Global_MUT.xyz\",     package=\"EDMAinR\") x <- read_xyz(file) x <- x[,,1:10] # 10 specimens  ## nonparametric fit fit <- gpa_fit(x, B=9) fit #> GPA fit (mean form only): Crouzon P0 MUT #> Call: gpa_fit(x = x, B = 9) #> 47 landmarks, 3 dimensions, 10 specimens, 9 bootstrap runs str(Meanform(fit)) #>  num [1:47, 1:3] -0.207 -2.827 0.465 2.453 1.713 ... #>  - attr(*, \"dimnames\")=List of 2 #>   ..$ : chr [1:47] \"amsph\" \"bas\" \"cpsh\" \"ethma\" ... #>   ..$ : chr [1:3] \"X\" \"Y\" \"Z\" str(SigmaKstar(fit)) #>  NULL"},{"path":"/reference/internals.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal functions — internals","title":"Internal functions — internals","text":"Users avoid directly using functions. part public user interface can changed time without warning.","code":""},{"path":"/reference/internals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal functions — internals","text":"","code":".edma_fit_np(A, less=TRUE) .Ttest_data(d1, d2, ref_denom=TRUE, mix=FALSE) .gpa_fit(A, ..., weighted=FALSE, gpa_results=FALSE)"},{"path":"/reference/internals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal functions — internals","text":"landmark data array (.e. .array(x)). weighted use shapes::procWGPA instead shapes::procGPA. gpa_results return GPA results. less logical argument controlling function returns. d1, d2 EDMA fit object compare forms. ref_denom logical, TRUE, denominator used reference object (form matrix fixed calculating bootstrap comparing object). mix logical, use mixed bootstrap (numeriator denominator populations mixed replacement) (non-reference population resampled replacement).","code":""},{"path":"/reference/report.html","id":null,"dir":"Reference","previous_headings":"","what":"EDMA Report — report","title":"EDMA Report — report","text":"Writes output text file following close WinEDMA implementation.","code":""},{"path":"/reference/report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EDMA Report — report","text":"","code":"edma_fdm_report(numerator, denominator, output=\"edma_output.txt\",   landmarks=NULL, B=0, level=0.95, ref_denom=TRUE, mix=FALSE,   digits=4)  edma_gdm_report(numerator_yng, numerator_old,     denominator_yng, denominator_old, output=\"edma_output.txt\",     landmarks=NULL, B=0, level=0.95, ref_denom=TRUE, mix=FALSE,     digits=4)"},{"path":"/reference/report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EDMA Report — report","text":"numerator, denominator, numerator_yng, numerator_old, denominator_yng, denominator_old input file names EDMA data objects. output path file name output file. landmarks subset landmarks specified, NULL (use landmarks). B number bootstrap samples. level confidence level. ref_denom logical, TRUE, denominator used reference object (form matrix fixed calculating bootstrap comparing object). mix logical, use mixed bootstrap (numeriator denominator populations mixed replacement) (non-reference population resampled replacement). digits significant digits print.","code":""},{"path":"/reference/report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"EDMA Report — report","text":"","code":"if (FALSE) {  edma_fdm_report(     numerator = system.file(         \"extdata/crouzon/Crouzon_P0_Global_NON-MUT.xyz\",         package=\"EDMAinR\"),     denominator = system.file(         \"extdata/crouzon/Crouzon_P0_Global_MUT.xyz\",         package=\"EDMAinR\"),     output=\"edma_output.txt\",     landmarks=c(\"locc\", \"lpfl\", \"lpsq\", \"lpto\", \"lsqu\",         \"rocc\", \"rpfl\", \"rpsq\", \"rpto\", \"rsqu\"),     B=1000,     level=0.9,     ref_denom=FALSE,     mix=TRUE)  }"},{"path":"/news/index.html","id":"version-03-0-2023-08-21","dir":"Changelog","previous_headings":"","what":"Version 0.3-0, 2023-08-21","title":"Version 0.3-0, 2023-08-21","text":"edma_scale function contributed Kevin M. Middleton (PR #11).","code":""},{"path":"/news/index.html","id":"version-02-1-2021-12-07","dir":"Changelog","previous_headings":"","what":"Version 0.2-1, 2021-12-07","title":"Version 0.2-1, 2021-12-07","text":"read_xyz don’t change landmark names syntactically valid.","code":""},{"path":"/news/index.html","id":"version-02-0-2021-11-04","dir":"Changelog","previous_headings":"","what":"Version 0.2-0, 2021-11-04","title":"Version 0.2-0, 2021-11-04","text":"Separate edma_fdm_report edma_gdm_report functions. Renaming Tobs_* functions global_* avoid confusion T-test. Updated documentation.","code":""},{"path":"/news/index.html","id":"version-01-11-2021-08-17","dir":"Changelog","previous_headings":"","what":"Version 0.1-11, 2021-08-17","title":"Version 0.1-11, 2021-08-17","text":"Added edma_report() reproduce WinEDMA output. Fixed CI calculation: ref_denom argument flip numerator denominator. 2D 3D plot revised color edges label landmarks.","code":""},{"path":"/news/index.html","id":"version-01-10-2021-07-19","dir":"Changelog","previous_headings":"","what":"Version 0.1-10, 2021-07-19","title":"Version 0.1-10, 2021-07-19","text":"Bug fix: FDM methods issues B=0. Added landmark names 2D plots, use labels=TRUE. 3D plots now preserve XYZ aspect ration 1. signif_only=FALSE allows plotting top/bottom percentage linear distances (edges) 2D/3D plots.","code":""},{"path":"/news/index.html","id":"version-01-8-2020-12-19","dir":"Changelog","previous_headings":"","what":"Version 0.1-8, 2020-12-19","title":"Version 0.1-8, 2020-12-19","text":"Added new function gpa_fit estimate mean form based GPA.","code":""},{"path":"/news/index.html","id":"version-01-7-2020-11-27","dir":"Changelog","previous_headings":"","what":"Version 0.1-7, 2020-11-27","title":"Version 0.1-7, 2020-11-27","text":"Renaming T_* functions Tobs_* avoid confusion T-test. Observed statistic included null distribution global testing. Added interactive plotly graphics vignettes.","code":""},{"path":"/news/index.html","id":"version-01-6-2020-11-20","dir":"Changelog","previous_headings":"","what":"Version 0.1-6, 2020-11-20","title":"Version 0.1-6, 2020-11-20","text":"Shape difference matrix (SDM) calculation added: edma_sdm. edma_sdm can set assume size, use TLS, particular edge. CI calculation (local FDM, GM, GDM, SDM testing) calculations use 2-sample bootstrap. Global FDM, GM, GDM testing (T-test) uses mixed reference bootstrap, global Z-test FDM based 2-sample bootstrap.","code":""},{"path":"/news/index.html","id":"version-01-4-2020-08-23","dir":"Changelog","previous_headings":"","what":"Version 0.1-4, 2020-08-23","title":"Version 0.1-4, 2020-08-23","text":".edma_fit_np preformant (original implementation retained .edma_fit_np_old comparison); also exposes mean/variance distances future uses. edma_simulate_data also much faster now. Nonparametric EDMA fid FDM analysis can use multiple cores. Added write.xyz function write EDMA data xyz format. Added 4 data sets growth difference analysis.","code":""},{"path":"/news/index.html","id":"version-01-3-2020-07-05","dir":"Changelog","previous_headings":"","what":"Version 0.1-3, 2020-07-05","title":"Version 0.1-3, 2020-07-05","text":"Small fixes parametric test helper functions. Miscellaneous function print/visualize pattern matrices. Exposed combine_data combine_data4 functions. Clustering method now can changed user. .edma_data method added turn 3D array (common morphometrics data format) EDMA data objects. Added edma_colors plot_edma_colors manipulating color palettes set via getOption(\"edma_options\"). Extensive updates docs vignettes.","code":""},{"path":"/news/index.html","id":"version-01-2-2020-04-30","dir":"Changelog","previous_headings":"","what":"Version 0.1-2, 2020-04-30","title":"Version 0.1-2, 2020-04-30","text":"Parametric estimation tested.","code":""},{"path":"/news/index.html","id":"version-01-1-2020-02-16","dir":"Changelog","previous_headings":"","what":"Version 0.1-1, 2020-02-16","title":"Version 0.1-1, 2020-02-16","text":"Global test p-values updated. Package website made {pkgdown}.","code":""},{"path":"/news/index.html","id":"version-01-0-2019-12-27","dir":"Changelog","previous_headings":"","what":"Version 0.1-0, 2019-12-27","title":"Version 0.1-0, 2019-12-27","text":"EDMA package command line interface finalized.","code":""}]
